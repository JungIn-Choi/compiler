Rules never reduced

  141 specifier_qualifier_list: type_specifier
  143                         | type_qualifier


State 0 conflicts: 29 shift/reduce
State 27 conflicts: 1 shift/reduce
State 33 conflicts: 29 shift/reduce, 7 reduce/reduce
State 34 conflicts: 29 shift/reduce, 7 reduce/reduce
State 39 conflicts: 29 shift/reduce, 7 reduce/reduce
State 40 conflicts: 29 shift/reduce, 7 reduce/reduce
State 41 conflicts: 29 shift/reduce, 7 reduce/reduce
State 43 conflicts: 29 shift/reduce
State 48 conflicts: 22 shift/reduce
State 49 conflicts: 20 shift/reduce
State 57 conflicts: 29 shift/reduce, 1 reduce/reduce
State 58 conflicts: 1 shift/reduce
State 63 conflicts: 20 shift/reduce
State 89 conflicts: 22 shift/reduce
State 112 conflicts: 20 shift/reduce, 7 reduce/reduce
State 114 conflicts: 20 shift/reduce, 7 reduce/reduce
State 126 conflicts: 33 shift/reduce
State 130 conflicts: 29 shift/reduce
State 131 conflicts: 31 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 20 shift/reduce
State 135 conflicts: 20 shift/reduce
State 143 conflicts: 22 shift/reduce
State 145 conflicts: 22 shift/reduce
State 148 conflicts: 20 shift/reduce
State 183 conflicts: 33 shift/reduce
State 219 conflicts: 33 shift/reduce
State 239 conflicts: 20 shift/reduce
State 305 conflicts: 30 shift/reduce
State 322 conflicts: 33 shift/reduce
State 331 conflicts: 34 shift/reduce
State 336 conflicts: 29 shift/reduce
State 356 conflicts: 20 shift/reduce
State 445 conflicts: 20 shift/reduce
State 456 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | string
    4                   | '(' expression ')'
    5                   | generic_selection

    6 constant: I_CONSTANT
    7         | F_CONSTANT
    8         | ENUMERATION_CONSTANT

    9 enumeration_constant: IDENTIFIER

   10 string: STRING_LITERAL
   11       | FUNC_NAME

   12 generic_selection: GENERIC '(' assignment_expression ',' generic_assoc_list ')'

   13 generic_assoc_list: generic_association
   14                   | generic_assoc_list ',' generic_association

   15 generic_association: type_name ':' assignment_expression
   16                    | DEFAULT ':' assignment_expression

   17 postfix_expression: primary_expression
   18                   | postfix_expression '[' expression ']'
   19                   | postfix_expression '(' ')'
   20                   | postfix_expression '(' argument_expression_list ')'
   21                   | postfix_expression '.' IDENTIFIER
   22                   | postfix_expression PTR_OP IDENTIFIER
   23                   | postfix_expression INC_OP
   24                   | postfix_expression DEC_OP
   25                   | '(' type_name ')' '{' initializer_list '}'
   26                   | '(' type_name ')' '{' initializer_list ',' '}'

   27 argument_expression_list: assignment_expression
   28                         | argument_expression_list ',' assignment_expression

   29 unary_expression: postfix_expression
   30                 | INC_OP unary_expression
   31                 | DEC_OP unary_expression
   32                 | unary_operator cast_expression
   33                 | SIZEOF unary_expression
   34                 | SIZEOF '(' type_name ')'
   35                 | ALIGNOF '(' type_name ')'

   36 unary_operator: '&'
   37               | '*'
   38               | '+'
   39               | '-'
   40               | '~'
   41               | '!'

   42 cast_expression: unary_expression
   43                | '(' type_name ')' cast_expression

   44 multiplicative_expression: cast_expression
   45                          | multiplicative_expression '*' cast_expression
   46                          | multiplicative_expression '/' cast_expression
   47                          | multiplicative_expression '%' cast_expression

   48 additive_expression: multiplicative_expression
   49                    | additive_expression '+' multiplicative_expression
   50                    | additive_expression '-' multiplicative_expression

   51 shift_expression: additive_expression
   52                 | shift_expression LEFT_OP additive_expression
   53                 | shift_expression RIGHT_OP additive_expression

   54 relational_expression: shift_expression
   55                      | relational_expression '<' shift_expression
   56                      | relational_expression '>' shift_expression
   57                      | relational_expression LE_OP shift_expression
   58                      | relational_expression GE_OP shift_expression

   59 equality_expression: relational_expression
   60                    | equality_expression EQ_OP relational_expression
   61                    | equality_expression NE_OP relational_expression

   62 and_expression: equality_expression
   63               | and_expression '&' equality_expression

   64 exclusive_or_expression: and_expression
   65                        | exclusive_or_expression '^' and_expression

   66 inclusive_or_expression: exclusive_or_expression
   67                        | inclusive_or_expression '|' exclusive_or_expression

   68 logical_and_expression: inclusive_or_expression
   69                       | logical_and_expression AND_OP inclusive_or_expression

   70 logical_or_expression: logical_and_expression
   71                      | logical_or_expression OR_OP logical_and_expression

   72 conditional_expression: logical_or_expression
   73                       | logical_or_expression '?' expression ':' conditional_expression

   74 assignment_expression: conditional_expression
   75                      | unary_expression assignment_operator assignment_expression

   76 assignment_operator: '='
   77                    | MUL_ASSIGN
   78                    | DIV_ASSIGN
   79                    | MOD_ASSIGN
   80                    | ADD_ASSIGN
   81                    | SUB_ASSIGN
   82                    | LEFT_ASSIGN
   83                    | RIGHT_ASSIGN
   84                    | AND_ASSIGN
   85                    | XOR_ASSIGN
   86                    | OR_ASSIGN

   87 expression: assignment_expression
   88           | expression ',' assignment_expression

   89 constant_expression: conditional_expression

   90 declaration: declaration_specifiers ';'
   91            | declaration_specifiers init_declarator_list ';'
   92            | static_assert_declaration

   93 declaration_specifiers: storage_class_specifier declaration_specifiers
   94                       | storage_class_specifier
   95                       | type_specifier declaration_specifiers
   96                       | type_specifier
   97                       | type_qualifier declaration_specifiers
   98                       | type_qualifier
   99                       | function_specifier declaration_specifiers
  100                       | function_specifier
  101                       | alignment_specifier declaration_specifiers
  102                       | alignment_specifier

  103 init_declarator_list: init_declarator
  104                     | init_declarator_list ',' init_declarator

  105 init_declarator: declarator '=' initializer
  106                | declarator

  107 storage_class_specifier: TYPEDEF
  108                        | EXTERN
  109                        | STATIC
  110                        | THREAD_LOCAL
  111                        | AUTO
  112                        | REGISTER

  113 type_specifier: /* empty */
  114               | VOID
  115               | CHAR
  116               | SHORT
  117               | INT
  118               | LONG
  119               | FLOAT
  120               | DOUBLE
  121               | SIGNED
  122               | UNSIGNED
  123               | BOOL
  124               | COMPLEX
  125               | IMAGINARY
  126               | atomic_type_specifier
  127               | struct_or_union_specifier
  128               | enum_specifier
  129               | TYPEDEF_NAME

  130 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  131                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  132                          | struct_or_union IDENTIFIER

  133 struct_or_union: STRUCT
  134                | UNION

  135 struct_declaration_list: struct_declaration
  136                        | struct_declaration_list struct_declaration

  137 struct_declaration: specifier_qualifier_list ';'
  138                   | specifier_qualifier_list struct_declarator_list ';'
  139                   | static_assert_declaration

  140 specifier_qualifier_list: type_specifier specifier_qualifier_list
  141                         | type_specifier
  142                         | type_qualifier specifier_qualifier_list
  143                         | type_qualifier

  144 struct_declarator_list: struct_declarator
  145                       | struct_declarator_list ',' struct_declarator

  146 struct_declarator: ':' constant_expression
  147                  | declarator ':' constant_expression
  148                  | declarator

  149 enum_specifier: ENUM '{' enumerator_list '}'
  150               | ENUM '{' enumerator_list ',' '}'
  151               | ENUM IDENTIFIER '{' enumerator_list '}'
  152               | ENUM IDENTIFIER '{' enumerator_list ',' '}'
  153               | ENUM IDENTIFIER

  154 enumerator_list: enumerator
  155                | enumerator_list ',' enumerator

  156 enumerator: enumeration_constant '=' constant_expression
  157           | enumeration_constant

  158 atomic_type_specifier: ATOMIC '(' type_name ')'

  159 type_qualifier: CONST
  160               | RESTRICT
  161               | VOLATILE
  162               | ATOMIC

  163 function_specifier: INLINE
  164                   | NORETURN

  165 alignment_specifier: ALIGNAS '(' type_name ')'
  166                    | ALIGNAS '(' constant_expression ')'

  167 declarator: pointer direct_declarator
  168           | direct_declarator

  169 direct_declarator: IDENTIFIER
  170                  | '(' declarator ')'
  171                  | direct_declarator '[' ']'
  172                  | direct_declarator '[' '*' ']'
  173                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  174                  | direct_declarator '[' STATIC assignment_expression ']'
  175                  | direct_declarator '[' type_qualifier_list '*' ']'
  176                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  177                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  178                  | direct_declarator '[' type_qualifier_list ']'
  179                  | direct_declarator '[' assignment_expression ']'
  180                  | direct_declarator '(' parameter_type_list ')'
  181                  | direct_declarator '(' ')'
  182                  | direct_declarator '(' identifier_list ')'

  183 pointer: '*' type_qualifier_list pointer
  184        | '*' type_qualifier_list
  185        | '*' pointer
  186        | '*'

  187 type_qualifier_list: type_qualifier
  188                    | type_qualifier_list type_qualifier

  189 parameter_type_list: parameter_list ',' ELLIPSIS
  190                    | parameter_list

  191 parameter_list: parameter_declaration
  192               | parameter_list ',' parameter_declaration

  193 parameter_declaration: declaration_specifiers declarator
  194                      | declaration_specifiers abstract_declarator
  195                      | declaration_specifiers

  196 identifier_list: IDENTIFIER
  197                | identifier_list ',' IDENTIFIER

  198 type_name: specifier_qualifier_list abstract_declarator
  199          | specifier_qualifier_list

  200 abstract_declarator: pointer direct_abstract_declarator
  201                    | pointer
  202                    | direct_abstract_declarator

  203 direct_abstract_declarator: '(' abstract_declarator ')'
  204                           | '[' ']'
  205                           | '[' '*' ']'
  206                           | '[' STATIC type_qualifier_list assignment_expression ']'
  207                           | '[' STATIC assignment_expression ']'
  208                           | '[' type_qualifier_list STATIC assignment_expression ']'
  209                           | '[' type_qualifier_list assignment_expression ']'
  210                           | '[' type_qualifier_list ']'
  211                           | '[' assignment_expression ']'
  212                           | direct_abstract_declarator '[' ']'
  213                           | direct_abstract_declarator '[' '*' ']'
  214                           | direct_abstract_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  215                           | direct_abstract_declarator '[' STATIC assignment_expression ']'
  216                           | direct_abstract_declarator '[' type_qualifier_list assignment_expression ']'
  217                           | direct_abstract_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  218                           | direct_abstract_declarator '[' type_qualifier_list ']'
  219                           | direct_abstract_declarator '[' assignment_expression ']'
  220                           | '(' ')'
  221                           | '(' parameter_type_list ')'
  222                           | direct_abstract_declarator '(' ')'
  223                           | direct_abstract_declarator '(' parameter_type_list ')'

  224 initializer: '{' initializer_list '}'
  225            | '{' initializer_list ',' '}'
  226            | assignment_expression

  227 initializer_list: designation initializer
  228                 | initializer
  229                 | initializer_list ',' designation initializer
  230                 | initializer_list ',' initializer

  231 designation: designator_list '='

  232 designator_list: designator
  233                | designator_list designator

  234 designator: '[' constant_expression ']'
  235           | '.' IDENTIFIER

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' ';'

  237 statement: labeled_statement
  238          | compound_statement
  239          | expression_statement
  240          | selection_statement
  241          | iteration_statement
  242          | jump_statement

  243 labeled_statement: IDENTIFIER ':' statement
  244                  | CASE constant_expression ':' statement
  245                  | DEFAULT ':' statement

  246 compound_statement: '{' '}'
  247                   | '{' block_item_list '}'

  248 block_item_list: block_item
  249                | block_item_list block_item

  250 block_item: declaration
  251           | statement

  252 expression_statement: ';'
  253                     | expression ';'

  254 selection_statement: IF '(' expression ')' statement ELSE statement
  255                    | IF '(' expression ')' statement
  256                    | SWITCH '(' expression ')' statement

  257 iteration_statement: WHILE '(' expression ')' statement
  258                    | DO statement WHILE '(' expression ')' ';'
  259                    | FOR '(' expression_statement expression_statement ')' statement
  260                    | FOR '(' expression_statement expression_statement expression ')' statement
  261                    | FOR '(' declaration expression_statement ')' statement
  262                    | FOR '(' declaration expression_statement expression ')' statement

  263 jump_statement: GOTO IDENTIFIER ';'
  264               | CONTINUE ';'
  265               | BREAK ';'
  266               | RETURN ';'
  267               | RETURN expression ';'

  268 translation_unit: external_declaration
  269                 | translation_unit external_declaration

  270 external_declaration: function_definition
  271                     | declaration

  272 function_definition: declaration_specifiers declarator declaration_list compound_statement
  273                    | declaration_specifiers declarator compound_statement

  274 declaration_list: declaration
  275                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 41
'%' (37) 47
'&' (38) 36 63
'(' (40) 4 12 19 20 25 26 34 35 43 158 165 166 170 180 181 182 203
    220 221 222 223 236 254 255 256 257 258 259 260 261 262
')' (41) 4 12 19 20 25 26 34 35 43 158 165 166 170 180 181 182 203
    220 221 222 223 236 254 255 256 257 258 259 260 261 262
'*' (42) 37 45 172 175 183 184 185 186 205 213
'+' (43) 38 49
',' (44) 12 14 26 28 88 104 145 150 152 155 189 192 197 225 229 230
    236
'-' (45) 39 50
'.' (46) 21 235
'/' (47) 46
':' (58) 15 16 73 146 147 243 244 245
';' (59) 90 91 137 138 236 252 253 258 263 264 265 266 267
'<' (60) 55
'=' (61) 76 105 156 231
'>' (62) 56
'?' (63) 73
'[' (91) 18 171 172 173 174 175 176 177 178 179 204 205 206 207 208
    209 210 211 212 213 214 215 216 217 218 219 234
']' (93) 18 171 172 173 174 175 176 177 178 179 204 205 206 207 208
    209 210 211 212 213 214 215 216 217 218 219 234
'^' (94) 65
'{' (123) 25 26 130 131 149 150 151 152 224 225 246 247
'|' (124) 67
'}' (125) 25 26 130 131 149 150 151 152 224 225 246 247
'~' (126) 40
error (256)
IDENTIFIER (258) 1 9 21 22 131 132 151 152 153 169 196 197 235 243
    263
I_CONSTANT (259) 6
F_CONSTANT (260) 7
STRING_LITERAL (261) 10 236
FUNC_NAME (262) 11
SIZEOF (263) 33 34
PTR_OP (264) 22
INC_OP (265) 23 30
DEC_OP (266) 24 31
LEFT_OP (267) 52
RIGHT_OP (268) 53
LE_OP (269) 57
GE_OP (270) 58
EQ_OP (271) 60
NE_OP (272) 61
AND_OP (273) 69
OR_OP (274) 71
MUL_ASSIGN (275) 77
DIV_ASSIGN (276) 78
MOD_ASSIGN (277) 79
ADD_ASSIGN (278) 80
SUB_ASSIGN (279) 81
LEFT_ASSIGN (280) 82
RIGHT_ASSIGN (281) 83
AND_ASSIGN (282) 84
XOR_ASSIGN (283) 85
OR_ASSIGN (284) 86
TYPEDEF_NAME (285) 129
ENUMERATION_CONSTANT (286) 8
TYPEDEF (287) 107
EXTERN (288) 108
STATIC (289) 109 173 174 176 206 207 208 214 215 217
AUTO (290) 111
REGISTER (291) 112
INLINE (292) 163
CONST (293) 159
RESTRICT (294) 160
VOLATILE (295) 161
BOOL (296) 123
CHAR (297) 115
SHORT (298) 116
INT (299) 117
LONG (300) 118
SIGNED (301) 121
UNSIGNED (302) 122
FLOAT (303) 119
DOUBLE (304) 120
VOID (305) 114
COMPLEX (306) 124
IMAGINARY (307) 125
STRUCT (308) 133
UNION (309) 134
ENUM (310) 149 150 151 152 153
ELLIPSIS (311) 189
CASE (312) 244
DEFAULT (313) 16 245
IF (314) 254 255
ELSE (315) 254
SWITCH (316) 256
WHILE (317) 257 258
DO (318) 258
FOR (319) 259 260 261 262
GOTO (320) 263
CONTINUE (321) 264
BREAK (322) 265
RETURN (323) 266 267
ALIGNAS (324) 165 166
ALIGNOF (325) 35
ATOMIC (326) 158 162
GENERIC (327) 12
NORETURN (328) 164
STATIC_ASSERT (329) 236
THREAD_LOCAL (330) 110


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
primary_expression (101)
    on left: 1 2 3 4 5, on right: 17
constant (102)
    on left: 6 7 8, on right: 2
enumeration_constant (103)
    on left: 9, on right: 156 157
string (104)
    on left: 10 11, on right: 3
generic_selection (105)
    on left: 12, on right: 5
generic_assoc_list (106)
    on left: 13 14, on right: 12 14
generic_association (107)
    on left: 15 16, on right: 13 14
postfix_expression (108)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 18 19 20 21 22
    23 24 29
argument_expression_list (109)
    on left: 27 28, on right: 20 28
unary_expression (110)
    on left: 29 30 31 32 33 34 35, on right: 30 31 33 42 75
unary_operator (111)
    on left: 36 37 38 39 40 41, on right: 32
cast_expression (112)
    on left: 42 43, on right: 32 43 44 45 46 47
multiplicative_expression (113)
    on left: 44 45 46 47, on right: 45 46 47 48 49 50
additive_expression (114)
    on left: 48 49 50, on right: 49 50 51 52 53
shift_expression (115)
    on left: 51 52 53, on right: 52 53 54 55 56 57 58
relational_expression (116)
    on left: 54 55 56 57 58, on right: 55 56 57 58 59 60 61
equality_expression (117)
    on left: 59 60 61, on right: 60 61 62 63
and_expression (118)
    on left: 62 63, on right: 63 64 65
exclusive_or_expression (119)
    on left: 64 65, on right: 65 66 67
inclusive_or_expression (120)
    on left: 66 67, on right: 67 68 69
logical_and_expression (121)
    on left: 68 69, on right: 69 70 71
logical_or_expression (122)
    on left: 70 71, on right: 71 72 73
conditional_expression (123)
    on left: 72 73, on right: 73 74 89
assignment_expression (124)
    on left: 74 75, on right: 12 15 16 27 28 75 87 88 173 174 176 177
    179 206 207 208 209 211 214 215 216 217 219 226
assignment_operator (125)
    on left: 76 77 78 79 80 81 82 83 84 85 86, on right: 75
expression (126)
    on left: 87 88, on right: 4 18 73 88 253 254 255 256 257 258 260
    262 267
constant_expression (127)
    on left: 89, on right: 146 147 156 166 234 236 244
declaration (128)
    on left: 90 91 92, on right: 250 261 262 271 274 275
declaration_specifiers (129)
    on left: 93 94 95 96 97 98 99 100 101 102, on right: 90 91 93 95
    97 99 101 193 194 195 272 273
init_declarator_list (130)
    on left: 103 104, on right: 91 104
init_declarator (131)
    on left: 105 106, on right: 103 104
storage_class_specifier (132)
    on left: 107 108 109 110 111 112, on right: 93 94
type_specifier (133)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129, on right: 95 96 140 141
struct_or_union_specifier (134)
    on left: 130 131 132, on right: 127
struct_or_union (135)
    on left: 133 134, on right: 130 131 132
struct_declaration_list (136)
    on left: 135 136, on right: 130 131 136
struct_declaration (137)
    on left: 137 138 139, on right: 135 136
specifier_qualifier_list (138)
    on left: 140 141 142 143, on right: 137 138 140 142 198 199
struct_declarator_list (139)
    on left: 144 145, on right: 138 145
struct_declarator (140)
    on left: 146 147 148, on right: 144 145
enum_specifier (141)
    on left: 149 150 151 152 153, on right: 128
enumerator_list (142)
    on left: 154 155, on right: 149 150 151 152 155
enumerator (143)
    on left: 156 157, on right: 154 155
atomic_type_specifier (144)
    on left: 158, on right: 126
type_qualifier (145)
    on left: 159 160 161 162, on right: 97 98 142 143 187 188
function_specifier (146)
    on left: 163 164, on right: 99 100
alignment_specifier (147)
    on left: 165 166, on right: 101 102
declarator (148)
    on left: 167 168, on right: 105 106 147 148 170 193 272 273
direct_declarator (149)
    on left: 169 170 171 172 173 174 175 176 177 178 179 180 181 182
   , on right: 167 168 171 172 173 174 175 176 177 178 179 180 181
    182
pointer (150)
    on left: 183 184 185 186, on right: 167 183 185 200 201
type_qualifier_list (151)
    on left: 187 188, on right: 173 175 176 177 178 183 184 188 206
    208 209 210 214 216 217 218
parameter_type_list (152)
    on left: 189 190, on right: 180 221 223
parameter_list (153)
    on left: 191 192, on right: 189 190 192
parameter_declaration (154)
    on left: 193 194 195, on right: 191 192
identifier_list (155)
    on left: 196 197, on right: 182 197
type_name (156)
    on left: 198 199, on right: 15 25 26 34 35 43 158 165
abstract_declarator (157)
    on left: 200 201 202, on right: 194 198 203
direct_abstract_declarator (158)
    on left: 203 204 205 206 207 208 209 210 211 212 213 214 215 216
    217 218 219 220 221 222 223, on right: 200 202 212 213 214 215
    216 217 218 219 222 223
initializer (159)
    on left: 224 225 226, on right: 105 227 228 229 230
initializer_list (160)
    on left: 227 228 229 230, on right: 25 26 224 225 229 230
designation (161)
    on left: 231, on right: 227 229
designator_list (162)
    on left: 232 233, on right: 231 233
designator (163)
    on left: 234 235, on right: 232 233
static_assert_declaration (164)
    on left: 236, on right: 92 139
statement (165)
    on left: 237 238 239 240 241 242, on right: 243 244 245 251 254
    255 256 257 258 259 260 261 262
labeled_statement (166)
    on left: 243 244 245, on right: 237
compound_statement (167)
    on left: 246 247, on right: 238 272 273
block_item_list (168)
    on left: 248 249, on right: 247 249
block_item (169)
    on left: 250 251, on right: 248 249
expression_statement (170)
    on left: 252 253, on right: 239 259 260 261 262
selection_statement (171)
    on left: 254 255 256, on right: 240
iteration_statement (172)
    on left: 257 258 259 260 261 262, on right: 241
jump_statement (173)
    on left: 263 264 265 266 267, on right: 242
translation_unit (174)
    on left: 268 269, on right: 0 269
external_declaration (175)
    on left: 270 271, on right: 268 269
function_definition (176)
    on left: 272 273, on right: 270
declaration_list (177)
    on left: 274 275, on right: 272 275


state 0

    0 $accept: . translation_unit $end

    TYPEDEF_NAME   shift, and go to state 1
    TYPEDEF        shift, and go to state 2
    EXTERN         shift, and go to state 3
    STATIC         shift, and go to state 4
    AUTO           shift, and go to state 5
    REGISTER       shift, and go to state 6
    INLINE         shift, and go to state 7
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ALIGNAS        shift, and go to state 26
    ATOMIC         shift, and go to state 27
    NORETURN       shift, and go to state 28
    STATIC_ASSERT  shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration                go to state 31
    declaration_specifiers     go to state 32
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    translation_unit           go to state 43
    external_declaration       go to state 44
    function_definition        go to state 45


state 1

  129 type_specifier: TYPEDEF_NAME .

    $default  reduce using rule 129 (type_specifier)


state 2

  107 storage_class_specifier: TYPEDEF .

    $default  reduce using rule 107 (storage_class_specifier)


state 3

  108 storage_class_specifier: EXTERN .

    $default  reduce using rule 108 (storage_class_specifier)


state 4

  109 storage_class_specifier: STATIC .

    $default  reduce using rule 109 (storage_class_specifier)


state 5

  111 storage_class_specifier: AUTO .

    $default  reduce using rule 111 (storage_class_specifier)


state 6

  112 storage_class_specifier: REGISTER .

    $default  reduce using rule 112 (storage_class_specifier)


state 7

  163 function_specifier: INLINE .

    $default  reduce using rule 163 (function_specifier)


state 8

  159 type_qualifier: CONST .

    $default  reduce using rule 159 (type_qualifier)


state 9

  160 type_qualifier: RESTRICT .

    $default  reduce using rule 160 (type_qualifier)


state 10

  161 type_qualifier: VOLATILE .

    $default  reduce using rule 161 (type_qualifier)


state 11

  123 type_specifier: BOOL .

    $default  reduce using rule 123 (type_specifier)


state 12

  115 type_specifier: CHAR .

    $default  reduce using rule 115 (type_specifier)


state 13

  116 type_specifier: SHORT .

    $default  reduce using rule 116 (type_specifier)


state 14

  117 type_specifier: INT .

    $default  reduce using rule 117 (type_specifier)


state 15

  118 type_specifier: LONG .

    $default  reduce using rule 118 (type_specifier)


state 16

  121 type_specifier: SIGNED .

    $default  reduce using rule 121 (type_specifier)


state 17

  122 type_specifier: UNSIGNED .

    $default  reduce using rule 122 (type_specifier)


state 18

  119 type_specifier: FLOAT .

    $default  reduce using rule 119 (type_specifier)


state 19

  120 type_specifier: DOUBLE .

    $default  reduce using rule 120 (type_specifier)


state 20

  114 type_specifier: VOID .

    $default  reduce using rule 114 (type_specifier)


state 21

  124 type_specifier: COMPLEX .

    $default  reduce using rule 124 (type_specifier)


state 22

  125 type_specifier: IMAGINARY .

    $default  reduce using rule 125 (type_specifier)


state 23

  133 struct_or_union: STRUCT .

    $default  reduce using rule 133 (struct_or_union)


state 24

  134 struct_or_union: UNION .

    $default  reduce using rule 134 (struct_or_union)


state 25

  149 enum_specifier: ENUM . '{' enumerator_list '}'
  150               | ENUM . '{' enumerator_list ',' '}'
  151               | ENUM . IDENTIFIER '{' enumerator_list '}'
  152               | ENUM . IDENTIFIER '{' enumerator_list ',' '}'
  153               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 46
    '{'         shift, and go to state 47


state 26

  165 alignment_specifier: ALIGNAS . '(' type_name ')'
  166                    | ALIGNAS . '(' constant_expression ')'

    '('  shift, and go to state 48


state 27

  158 atomic_type_specifier: ATOMIC . '(' type_name ')'
  162 type_qualifier: ATOMIC .

    '('  shift, and go to state 49

    '('       [reduce using rule 162 (type_qualifier)]
    $default  reduce using rule 162 (type_qualifier)


state 28

  164 function_specifier: NORETURN .

    $default  reduce using rule 164 (function_specifier)


state 29

  236 static_assert_declaration: STATIC_ASSERT . '(' constant_expression ',' STRING_LITERAL ')' ';'

    '('  shift, and go to state 50


state 30

  110 storage_class_specifier: THREAD_LOCAL .

    $default  reduce using rule 110 (storage_class_specifier)


state 31

  271 external_declaration: declaration .

    $default  reduce using rule 271 (external_declaration)


state 32

   90 declaration: declaration_specifiers . ';'
   91            | declaration_specifiers . init_declarator_list ';'
  272 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  273                    | declaration_specifiers . declarator compound_statement

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53
    ';'         shift, and go to state 54

    init_declarator_list  go to state 55
    init_declarator       go to state 56
    declarator            go to state 57
    direct_declarator     go to state 58
    pointer               go to state 59


state 33

   93 declaration_specifiers: storage_class_specifier . declaration_specifiers
   94                       | storage_class_specifier .

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    '*'           reduce using rule 94 (declaration_specifiers)
    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    reduce using rule 94 (declaration_specifiers)
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 94 (declaration_specifiers)
    '('           [reduce using rule 113 (type_specifier)]
    ')'           reduce using rule 94 (declaration_specifiers)
    ')'           [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 94 (declaration_specifiers)
    ','           [reduce using rule 113 (type_specifier)]
    '['           reduce using rule 94 (declaration_specifiers)
    '['           [reduce using rule 113 (type_specifier)]
    ';'           reduce using rule 94 (declaration_specifiers)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 94 (declaration_specifiers)

    declaration_specifiers     go to state 60
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41


state 34

   95 declaration_specifiers: type_specifier . declaration_specifiers
   96                       | type_specifier .

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    '*'           reduce using rule 96 (declaration_specifiers)
    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    reduce using rule 96 (declaration_specifiers)
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 96 (declaration_specifiers)
    '('           [reduce using rule 113 (type_specifier)]
    ')'           reduce using rule 96 (declaration_specifiers)
    ')'           [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 96 (declaration_specifiers)
    ','           [reduce using rule 113 (type_specifier)]
    '['           reduce using rule 96 (declaration_specifiers)
    '['           [reduce using rule 113 (type_specifier)]
    ';'           reduce using rule 96 (declaration_specifiers)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 96 (declaration_specifiers)

    declaration_specifiers     go to state 61
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41


state 35

  127 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 127 (type_specifier)


state 36

  130 struct_or_union_specifier: struct_or_union . '{' struct_declaration_list '}'
  131                          | struct_or_union . IDENTIFIER '{' struct_declaration_list '}'
  132                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 62
    '{'         shift, and go to state 63


state 37

  128 type_specifier: enum_specifier .

    $default  reduce using rule 128 (type_specifier)


state 38

  126 type_specifier: atomic_type_specifier .

    $default  reduce using rule 126 (type_specifier)


state 39

   97 declaration_specifiers: type_qualifier . declaration_specifiers
   98                       | type_qualifier .

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    '*'           reduce using rule 98 (declaration_specifiers)
    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    reduce using rule 98 (declaration_specifiers)
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 98 (declaration_specifiers)
    '('           [reduce using rule 113 (type_specifier)]
    ')'           reduce using rule 98 (declaration_specifiers)
    ')'           [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 98 (declaration_specifiers)
    ','           [reduce using rule 113 (type_specifier)]
    '['           reduce using rule 98 (declaration_specifiers)
    '['           [reduce using rule 113 (type_specifier)]
    ';'           reduce using rule 98 (declaration_specifiers)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 98 (declaration_specifiers)

    declaration_specifiers     go to state 64
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41


state 40

   99 declaration_specifiers: function_specifier . declaration_specifiers
  100                       | function_specifier .

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    '*'           reduce using rule 100 (declaration_specifiers)
    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    reduce using rule 100 (declaration_specifiers)
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 100 (declaration_specifiers)
    '('           [reduce using rule 113 (type_specifier)]
    ')'           reduce using rule 100 (declaration_specifiers)
    ')'           [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 100 (declaration_specifiers)
    ','           [reduce using rule 113 (type_specifier)]
    '['           reduce using rule 100 (declaration_specifiers)
    '['           [reduce using rule 113 (type_specifier)]
    ';'           reduce using rule 100 (declaration_specifiers)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 100 (declaration_specifiers)

    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41


state 41

  101 declaration_specifiers: alignment_specifier . declaration_specifiers
  102                       | alignment_specifier .

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    '*'           reduce using rule 102 (declaration_specifiers)
    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    reduce using rule 102 (declaration_specifiers)
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 102 (declaration_specifiers)
    '('           [reduce using rule 113 (type_specifier)]
    ')'           reduce using rule 102 (declaration_specifiers)
    ')'           [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 102 (declaration_specifiers)
    ','           [reduce using rule 113 (type_specifier)]
    '['           reduce using rule 102 (declaration_specifiers)
    '['           [reduce using rule 113 (type_specifier)]
    ';'           reduce using rule 102 (declaration_specifiers)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 102 (declaration_specifiers)

    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41


state 42

   92 declaration: static_assert_declaration .

    $default  reduce using rule 92 (declaration)


state 43

    0 $accept: translation_unit . $end
  269 translation_unit: translation_unit . external_declaration

    $end           shift, and go to state 67
    TYPEDEF_NAME   shift, and go to state 1
    TYPEDEF        shift, and go to state 2
    EXTERN         shift, and go to state 3
    STATIC         shift, and go to state 4
    AUTO           shift, and go to state 5
    REGISTER       shift, and go to state 6
    INLINE         shift, and go to state 7
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ALIGNAS        shift, and go to state 26
    ATOMIC         shift, and go to state 27
    NORETURN       shift, and go to state 28
    STATIC_ASSERT  shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration                go to state 31
    declaration_specifiers     go to state 32
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    external_declaration       go to state 68
    function_definition        go to state 45


state 44

  268 translation_unit: external_declaration .

    $default  reduce using rule 268 (translation_unit)


state 45

  270 external_declaration: function_definition .

    $default  reduce using rule 270 (external_declaration)


state 46

  151 enum_specifier: ENUM IDENTIFIER . '{' enumerator_list '}'
  152               | ENUM IDENTIFIER . '{' enumerator_list ',' '}'
  153               | ENUM IDENTIFIER .

    '{'  shift, and go to state 69

    $default  reduce using rule 153 (enum_specifier)


state 47

  149 enum_specifier: ENUM '{' . enumerator_list '}'
  150               | ENUM '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 70

    enumeration_constant  go to state 71
    enumerator_list       go to state 72
    enumerator            go to state 73


state 48

  165 alignment_specifier: ALIGNAS '(' . type_name ')'
  166                    | ALIGNAS '(' . constant_expression ')'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    '*'           [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 111
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 115


state 49

  158 atomic_type_specifier: ATOMIC '(' . type_name ')'

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ATOMIC        shift, and go to state 27

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 116


state 50

  236 static_assert_declaration: STATIC_ASSERT '(' . constant_expression ',' STRING_LITERAL ')' ';'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 117


state 51

  183 pointer: '*' . type_qualifier_list pointer
  184        | '*' . type_qualifier_list
  185        | '*' . pointer
  186        | '*' .

    '*'       shift, and go to state 51
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    ATOMIC    shift, and go to state 118

    $default  reduce using rule 186 (pointer)

    type_qualifier       go to state 119
    pointer              go to state 120
    type_qualifier_list  go to state 121


state 52

  169 direct_declarator: IDENTIFIER .

    $default  reduce using rule 169 (direct_declarator)


state 53

  170 direct_declarator: '(' . declarator ')'

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53

    declarator         go to state 122
    direct_declarator  go to state 58
    pointer            go to state 59


state 54

   90 declaration: declaration_specifiers ';' .

    $default  reduce using rule 90 (declaration)


state 55

   91 declaration: declaration_specifiers init_declarator_list . ';'
  104 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 123
    ';'  shift, and go to state 124


state 56

  103 init_declarator_list: init_declarator .

    $default  reduce using rule 103 (init_declarator_list)


state 57

  105 init_declarator: declarator . '=' initializer
  106                | declarator .
  272 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  273                    | declaration_specifiers declarator . compound_statement

    '='            shift, and go to state 125
    TYPEDEF_NAME   shift, and go to state 1
    TYPEDEF        shift, and go to state 2
    EXTERN         shift, and go to state 3
    STATIC         shift, and go to state 4
    AUTO           shift, and go to state 5
    REGISTER       shift, and go to state 6
    INLINE         shift, and go to state 7
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ALIGNAS        shift, and go to state 26
    ATOMIC         shift, and go to state 27
    NORETURN       shift, and go to state 28
    STATIC_ASSERT  shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    '{'            shift, and go to state 126

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    ','           reduce using rule 106 (init_declarator)
    ';'           reduce using rule 106 (init_declarator)
    ';'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration                go to state 127
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    compound_statement         go to state 129
    declaration_list           go to state 130


state 58

  168 declarator: direct_declarator .
  171 direct_declarator: direct_declarator . '[' ']'
  172                  | direct_declarator . '[' '*' ']'
  173                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  174                  | direct_declarator . '[' STATIC assignment_expression ']'
  175                  | direct_declarator . '[' type_qualifier_list '*' ']'
  176                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  177                  | direct_declarator . '[' type_qualifier_list assignment_expression ']'
  178                  | direct_declarator . '[' type_qualifier_list ']'
  179                  | direct_declarator . '[' assignment_expression ']'
  180                  | direct_declarator . '(' parameter_type_list ')'
  181                  | direct_declarator . '(' ')'
  182                  | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 131
    '['  shift, and go to state 132

    '('       [reduce using rule 168 (declarator)]
    $default  reduce using rule 168 (declarator)


state 59

  167 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53

    direct_declarator  go to state 133


state 60

   93 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 93 (declaration_specifiers)


state 61

   95 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 95 (declaration_specifiers)


state 62

  131 struct_or_union_specifier: struct_or_union IDENTIFIER . '{' struct_declaration_list '}'
  132                          | struct_or_union IDENTIFIER .

    '{'  shift, and go to state 134

    $default  reduce using rule 132 (struct_or_union_specifier)


state 63

  130 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    TYPEDEF_NAME   shift, and go to state 1
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 29

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    struct_declaration_list    go to state 135
    struct_declaration         go to state 136
    specifier_qualifier_list   go to state 137
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    static_assert_declaration  go to state 138


state 64

   97 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 97 (declaration_specifiers)


state 65

   99 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 99 (declaration_specifiers)


state 66

  101 declaration_specifiers: alignment_specifier declaration_specifiers .

    $default  reduce using rule 101 (declaration_specifiers)


state 67

    0 $accept: translation_unit $end .

    $default  accept


state 68

  269 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 269 (translation_unit)


state 69

  151 enum_specifier: ENUM IDENTIFIER '{' . enumerator_list '}'
  152               | ENUM IDENTIFIER '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 70

    enumeration_constant  go to state 71
    enumerator_list       go to state 139
    enumerator            go to state 73


state 70

    9 enumeration_constant: IDENTIFIER .

    $default  reduce using rule 9 (enumeration_constant)


state 71

  156 enumerator: enumeration_constant . '=' constant_expression
  157           | enumeration_constant .

    '='  shift, and go to state 140

    $default  reduce using rule 157 (enumerator)


state 72

  149 enum_specifier: ENUM '{' enumerator_list . '}'
  150               | ENUM '{' enumerator_list . ',' '}'
  155 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 141
    '}'  shift, and go to state 142


state 73

  154 enumerator_list: enumerator .

    $default  reduce using rule 154 (enumerator_list)


state 74

   38 unary_operator: '+' .

    $default  reduce using rule 38 (unary_operator)


state 75

   39 unary_operator: '-' .

    $default  reduce using rule 39 (unary_operator)


state 76

   37 unary_operator: '*' .

    $default  reduce using rule 37 (unary_operator)


state 77

   41 unary_operator: '!' .

    $default  reduce using rule 41 (unary_operator)


state 78

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


state 79

    6 constant: I_CONSTANT .

    $default  reduce using rule 6 (constant)


state 80

    7 constant: F_CONSTANT .

    $default  reduce using rule 7 (constant)


state 81

   10 string: STRING_LITERAL .

    $default  reduce using rule 10 (string)


state 82

   11 string: FUNC_NAME .

    $default  reduce using rule 11 (string)


state 83

   33 unary_expression: SIZEOF . unary_expression
   34                 | SIZEOF . '(' type_name ')'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 143
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 144
    unary_operator      go to state 98


state 84

   30 unary_expression: INC_OP . unary_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 145
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 146
    unary_operator      go to state 98


state 85

   31 unary_expression: DEC_OP . unary_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 145
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 147
    unary_operator      go to state 98


state 86

    8 constant: ENUMERATION_CONSTANT .

    $default  reduce using rule 8 (constant)


state 87

   35 unary_expression: ALIGNOF . '(' type_name ')'

    '('  shift, and go to state 148


state 88

   12 generic_selection: GENERIC . '(' assignment_expression ',' generic_assoc_list ')'

    '('  shift, and go to state 149


state 89

    4 primary_expression: '(' . expression ')'
   25 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   26                   | '(' . type_name ')' '{' initializer_list ',' '}'
   43 cast_expression: '(' . type_name ')' cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    '*'           [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 153
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 154


state 90

   36 unary_operator: '&' .

    $default  reduce using rule 36 (unary_operator)


state 91

   40 unary_operator: '~' .

    $default  reduce using rule 40 (unary_operator)


state 92

   17 postfix_expression: primary_expression .

    $default  reduce using rule 17 (postfix_expression)


state 93

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


state 94

    3 primary_expression: string .

    $default  reduce using rule 3 (primary_expression)


state 95

    5 primary_expression: generic_selection .

    $default  reduce using rule 5 (primary_expression)


state 96

   18 postfix_expression: postfix_expression . '[' expression ']'
   19                   | postfix_expression . '(' ')'
   20                   | postfix_expression . '(' argument_expression_list ')'
   21                   | postfix_expression . '.' IDENTIFIER
   22                   | postfix_expression . PTR_OP IDENTIFIER
   23                   | postfix_expression . INC_OP
   24                   | postfix_expression . DEC_OP
   29 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 155
    INC_OP  shift, and go to state 156
    DEC_OP  shift, and go to state 157
    '('     shift, and go to state 158
    '['     shift, and go to state 159
    '.'     shift, and go to state 160

    $default  reduce using rule 29 (unary_expression)


state 97

   42 cast_expression: unary_expression .

    $default  reduce using rule 42 (cast_expression)


state 98

   32 unary_expression: unary_operator . cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 97
    unary_operator      go to state 98
    cast_expression     go to state 161


state 99

   44 multiplicative_expression: cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


state 100

   45 multiplicative_expression: multiplicative_expression . '*' cast_expression
   46                          | multiplicative_expression . '/' cast_expression
   47                          | multiplicative_expression . '%' cast_expression
   48 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 48 (additive_expression)


state 101

   49 additive_expression: additive_expression . '+' multiplicative_expression
   50                    | additive_expression . '-' multiplicative_expression
   51 shift_expression: additive_expression .

    '+'  shift, and go to state 165
    '-'  shift, and go to state 166

    $default  reduce using rule 51 (shift_expression)


state 102

   52 shift_expression: shift_expression . LEFT_OP additive_expression
   53                 | shift_expression . RIGHT_OP additive_expression
   54 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 167
    RIGHT_OP  shift, and go to state 168

    $default  reduce using rule 54 (relational_expression)


state 103

   55 relational_expression: relational_expression . '<' shift_expression
   56                      | relational_expression . '>' shift_expression
   57                      | relational_expression . LE_OP shift_expression
   58                      | relational_expression . GE_OP shift_expression
   59 equality_expression: relational_expression .

    '<'    shift, and go to state 169
    '>'    shift, and go to state 170
    LE_OP  shift, and go to state 171
    GE_OP  shift, and go to state 172

    $default  reduce using rule 59 (equality_expression)


state 104

   60 equality_expression: equality_expression . EQ_OP relational_expression
   61                    | equality_expression . NE_OP relational_expression
   62 and_expression: equality_expression .

    EQ_OP  shift, and go to state 173
    NE_OP  shift, and go to state 174

    $default  reduce using rule 62 (and_expression)


state 105

   63 and_expression: and_expression . '&' equality_expression
   64 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 175

    $default  reduce using rule 64 (exclusive_or_expression)


state 106

   65 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   66 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 176

    $default  reduce using rule 66 (inclusive_or_expression)


state 107

   67 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   68 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 177

    $default  reduce using rule 68 (logical_and_expression)


state 108

   69 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   70 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 178

    $default  reduce using rule 70 (logical_or_expression)


state 109

   71 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   72 conditional_expression: logical_or_expression .
   73                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 179
    '?'    shift, and go to state 180

    $default  reduce using rule 72 (conditional_expression)


state 110

   89 constant_expression: conditional_expression .

    $default  reduce using rule 89 (constant_expression)


state 111

  166 alignment_specifier: ALIGNAS '(' constant_expression . ')'

    ')'  shift, and go to state 181


state 112

  140 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  141                         | type_specifier .

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ATOMIC        shift, and go to state 27

    '*'           reduce using rule 113 (type_specifier)
    '*'           [reduce using rule 141 (specifier_qualifier_list)]
    IDENTIFIER    reduce using rule 113 (type_specifier)
    IDENTIFIER    [reduce using rule 141 (specifier_qualifier_list)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 113 (type_specifier)
    '('           [reduce using rule 141 (specifier_qualifier_list)]
    ')'           reduce using rule 113 (type_specifier)
    ')'           [reduce using rule 141 (specifier_qualifier_list)]
    ':'           reduce using rule 113 (type_specifier)
    ':'           [reduce using rule 141 (specifier_qualifier_list)]
    '['           reduce using rule 113 (type_specifier)
    '['           [reduce using rule 141 (specifier_qualifier_list)]
    ';'           reduce using rule 113 (type_specifier)
    ';'           [reduce using rule 141 (specifier_qualifier_list)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 182
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114


state 113

  198 type_name: specifier_qualifier_list . abstract_declarator
  199          | specifier_qualifier_list .

    '*'  shift, and go to state 51
    '('  shift, and go to state 183
    '['  shift, and go to state 184

    $default  reduce using rule 199 (type_name)

    pointer                     go to state 185
    abstract_declarator         go to state 186
    direct_abstract_declarator  go to state 187


state 114

  142 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  143                         | type_qualifier .

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ATOMIC        shift, and go to state 27

    '*'           reduce using rule 113 (type_specifier)
    '*'           [reduce using rule 143 (specifier_qualifier_list)]
    IDENTIFIER    reduce using rule 113 (type_specifier)
    IDENTIFIER    [reduce using rule 143 (specifier_qualifier_list)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           reduce using rule 113 (type_specifier)
    '('           [reduce using rule 143 (specifier_qualifier_list)]
    ')'           reduce using rule 113 (type_specifier)
    ')'           [reduce using rule 143 (specifier_qualifier_list)]
    ':'           reduce using rule 113 (type_specifier)
    ':'           [reduce using rule 143 (specifier_qualifier_list)]
    '['           reduce using rule 113 (type_specifier)
    '['           [reduce using rule 143 (specifier_qualifier_list)]
    ';'           reduce using rule 113 (type_specifier)
    ';'           [reduce using rule 143 (specifier_qualifier_list)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 188
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114


state 115

  165 alignment_specifier: ALIGNAS '(' type_name . ')'

    ')'  shift, and go to state 189


state 116

  158 atomic_type_specifier: ATOMIC '(' type_name . ')'

    ')'  shift, and go to state 190


state 117

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression . ',' STRING_LITERAL ')' ';'

    ','  shift, and go to state 191


state 118

  162 type_qualifier: ATOMIC .

    $default  reduce using rule 162 (type_qualifier)


state 119

  187 type_qualifier_list: type_qualifier .

    $default  reduce using rule 187 (type_qualifier_list)


state 120

  185 pointer: '*' pointer .

    $default  reduce using rule 185 (pointer)


state 121

  183 pointer: '*' type_qualifier_list . pointer
  184        | '*' type_qualifier_list .
  188 type_qualifier_list: type_qualifier_list . type_qualifier

    '*'       shift, and go to state 51
    CONST     shift, and go to state 8
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 10
    ATOMIC    shift, and go to state 118

    $default  reduce using rule 184 (pointer)

    type_qualifier  go to state 192
    pointer         go to state 193


state 122

  170 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 194


state 123

  104 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53

    init_declarator    go to state 195
    declarator         go to state 196
    direct_declarator  go to state 58
    pointer            go to state 59


state 124

   91 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 91 (declaration)


state 125

  105 init_declarator: declarator '=' . initializer

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 197
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 199


state 126

  246 compound_statement: '{' . '}'
  247                   | '{' . block_item_list '}'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    TYPEDEF               shift, and go to state 2
    EXTERN                shift, and go to state 3
    STATIC                shift, and go to state 4
    AUTO                  shift, and go to state 5
    REGISTER              shift, and go to state 6
    INLINE                shift, and go to state 7
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNAS               shift, and go to state 26
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    NORETURN              shift, and go to state 28
    STATIC_ASSERT         shift, and go to state 29
    THREAD_LOCAL          shift, and go to state 30
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '}'                   shift, and go to state 212
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    ';'           [reduce using rule 113 (type_specifier)]

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    declaration                go to state 215
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    statement                  go to state 216
    labeled_statement          go to state 217
    compound_statement         go to state 218
    block_item_list            go to state 219
    block_item                 go to state 220
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 127

  274 declaration_list: declaration .

    $default  reduce using rule 274 (declaration_list)


state 128

   90 declaration: declaration_specifiers . ';'
   91            | declaration_specifiers . init_declarator_list ';'

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53
    ';'         shift, and go to state 54

    init_declarator_list  go to state 55
    init_declarator       go to state 56
    declarator            go to state 196
    direct_declarator     go to state 58
    pointer               go to state 59


state 129

  273 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 273 (function_definition)


state 130

  272 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  275 declaration_list: declaration_list . declaration

    TYPEDEF_NAME   shift, and go to state 1
    TYPEDEF        shift, and go to state 2
    EXTERN         shift, and go to state 3
    STATIC         shift, and go to state 4
    AUTO           shift, and go to state 5
    REGISTER       shift, and go to state 6
    INLINE         shift, and go to state 7
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ALIGNAS        shift, and go to state 26
    ATOMIC         shift, and go to state 27
    NORETURN       shift, and go to state 28
    STATIC_ASSERT  shift, and go to state 29
    THREAD_LOCAL   shift, and go to state 30
    '{'            shift, and go to state 126

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration                go to state 225
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    compound_statement         go to state 226


state 131

  180 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  181                  | direct_declarator '(' . ')'
  182                  | direct_declarator '(' . identifier_list ')'

    IDENTIFIER    shift, and go to state 227
    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30
    ')'           shift, and go to state 228

    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    ')'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration_specifiers     go to state 229
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    parameter_type_list        go to state 230
    parameter_list             go to state 231
    parameter_declaration      go to state 232
    identifier_list            go to state 233


state 132

  171 direct_declarator: direct_declarator '[' . ']'
  172                  | direct_declarator '[' . '*' ']'
  173                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  174                  | direct_declarator '[' . STATIC assignment_expression ']'
  175                  | direct_declarator '[' . type_qualifier_list '*' ']'
  176                  | direct_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  177                  | direct_declarator '[' . type_qualifier_list assignment_expression ']'
  178                  | direct_declarator '[' . type_qualifier_list ']'
  179                  | direct_declarator '[' . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 234
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 235
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 236
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 237
    type_qualifier             go to state 119
    type_qualifier_list        go to state 238


state 133

  167 declarator: pointer direct_declarator .
  171 direct_declarator: direct_declarator . '[' ']'
  172                  | direct_declarator . '[' '*' ']'
  173                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  174                  | direct_declarator . '[' STATIC assignment_expression ']'
  175                  | direct_declarator . '[' type_qualifier_list '*' ']'
  176                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  177                  | direct_declarator . '[' type_qualifier_list assignment_expression ']'
  178                  | direct_declarator . '[' type_qualifier_list ']'
  179                  | direct_declarator . '[' assignment_expression ']'
  180                  | direct_declarator . '(' parameter_type_list ')'
  181                  | direct_declarator . '(' ')'
  182                  | direct_declarator . '(' identifier_list ')'

    '('  shift, and go to state 131
    '['  shift, and go to state 132

    '('       [reduce using rule 167 (declarator)]
    $default  reduce using rule 167 (declarator)


state 134

  131 struct_or_union_specifier: struct_or_union IDENTIFIER '{' . struct_declaration_list '}'

    TYPEDEF_NAME   shift, and go to state 1
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 29

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    struct_declaration_list    go to state 239
    struct_declaration         go to state 136
    specifier_qualifier_list   go to state 137
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    static_assert_declaration  go to state 138


state 135

  130 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  136 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPEDEF_NAME   shift, and go to state 1
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 29
    '}'            shift, and go to state 240

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    struct_declaration         go to state 241
    specifier_qualifier_list   go to state 137
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    static_assert_declaration  go to state 138


state 136

  135 struct_declaration_list: struct_declaration .

    $default  reduce using rule 135 (struct_declaration_list)


state 137

  137 struct_declaration: specifier_qualifier_list . ';'
  138                   | specifier_qualifier_list . struct_declarator_list ';'

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53
    ':'         shift, and go to state 242
    ';'         shift, and go to state 243

    struct_declarator_list  go to state 244
    struct_declarator       go to state 245
    declarator              go to state 246
    direct_declarator       go to state 58
    pointer                 go to state 59


state 138

  139 struct_declaration: static_assert_declaration .

    $default  reduce using rule 139 (struct_declaration)


state 139

  151 enum_specifier: ENUM IDENTIFIER '{' enumerator_list . '}'
  152               | ENUM IDENTIFIER '{' enumerator_list . ',' '}'
  155 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 247
    '}'  shift, and go to state 248


state 140

  156 enumerator: enumeration_constant '=' . constant_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 249


state 141

  150 enum_specifier: ENUM '{' enumerator_list ',' . '}'
  155 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 70
    '}'         shift, and go to state 250

    enumeration_constant  go to state 71
    enumerator            go to state 251


state 142

  149 enum_specifier: ENUM '{' enumerator_list '}' .

    $default  reduce using rule 149 (enum_specifier)


state 143

    4 primary_expression: '(' . expression ')'
   25 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   26                   | '(' . type_name ')' '{' initializer_list ',' '}'
   34 unary_expression: SIZEOF '(' . type_name ')'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    '*'           [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 153
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 252


state 144

   33 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 33 (unary_expression)


state 145

    4 primary_expression: '(' . expression ')'
   25 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   26                   | '(' . type_name ')' '{' initializer_list ',' '}'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    '*'           [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 153
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 253


state 146

   30 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 30 (unary_expression)


state 147

   31 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 31 (unary_expression)


state 148

   35 unary_expression: ALIGNOF '(' . type_name ')'

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ATOMIC        shift, and go to state 27

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 254


state 149

   12 generic_selection: GENERIC '(' . assignment_expression ',' generic_assoc_list ')'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 255


state 150

   42 cast_expression: unary_expression .
   75 assignment_expression: unary_expression . assignment_operator assignment_expression

    '='           shift, and go to state 256
    MUL_ASSIGN    shift, and go to state 257
    DIV_ASSIGN    shift, and go to state 258
    MOD_ASSIGN    shift, and go to state 259
    ADD_ASSIGN    shift, and go to state 260
    SUB_ASSIGN    shift, and go to state 261
    LEFT_ASSIGN   shift, and go to state 262
    RIGHT_ASSIGN  shift, and go to state 263
    AND_ASSIGN    shift, and go to state 264
    XOR_ASSIGN    shift, and go to state 265
    OR_ASSIGN     shift, and go to state 266

    $default  reduce using rule 42 (cast_expression)

    assignment_operator  go to state 267


state 151

   74 assignment_expression: conditional_expression .

    $default  reduce using rule 74 (assignment_expression)


state 152

   87 expression: assignment_expression .

    $default  reduce using rule 87 (expression)


state 153

    4 primary_expression: '(' expression . ')'
   88 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 268
    ','  shift, and go to state 269


state 154

   25 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   26                   | '(' type_name . ')' '{' initializer_list ',' '}'
   43 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 270


state 155

   22 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 271


state 156

   23 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 23 (postfix_expression)


state 157

   24 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 24 (postfix_expression)


state 158

   19 postfix_expression: postfix_expression '(' . ')'
   20                   | postfix_expression '(' . argument_expression_list ')'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ')'                   shift, and go to state 272
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    argument_expression_list   go to state 273
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 274


state 159

   18 postfix_expression: postfix_expression '[' . expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 275


state 160

   21 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 276


state 161

   32 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 32 (unary_expression)


state 162

   45 multiplicative_expression: multiplicative_expression '*' . cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 97
    unary_operator      go to state 98
    cast_expression     go to state 277


state 163

   46 multiplicative_expression: multiplicative_expression '/' . cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 97
    unary_operator      go to state 98
    cast_expression     go to state 278


state 164

   47 multiplicative_expression: multiplicative_expression '%' . cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 97
    unary_operator      go to state 98
    cast_expression     go to state 279


state 165

   49 additive_expression: additive_expression '+' . multiplicative_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 280


state 166

   50 additive_expression: additive_expression '-' . multiplicative_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 281


state 167

   52 shift_expression: shift_expression LEFT_OP . additive_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 282


state 168

   53 shift_expression: shift_expression RIGHT_OP . additive_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 283


state 169

   55 relational_expression: relational_expression '<' . shift_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 284


state 170

   56 relational_expression: relational_expression '>' . shift_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 285


state 171

   57 relational_expression: relational_expression LE_OP . shift_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 286


state 172

   58 relational_expression: relational_expression GE_OP . shift_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 287


state 173

   60 equality_expression: equality_expression EQ_OP . relational_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 288


state 174

   61 equality_expression: equality_expression NE_OP . relational_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 289


state 175

   63 and_expression: and_expression '&' . equality_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 290


state 176

   65 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 291


state 177

   67 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 292


state 178

   69 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 293


state 179

   71 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 294


state 180

   73 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 295


state 181

  166 alignment_specifier: ALIGNAS '(' constant_expression ')' .

    $default  reduce using rule 166 (alignment_specifier)


state 182

  140 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 140 (specifier_qualifier_list)


state 183

  203 direct_abstract_declarator: '(' . abstract_declarator ')'
  220                           | '(' . ')'
  221                           | '(' . parameter_type_list ')'

    '*'           shift, and go to state 51
    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30
    '('           shift, and go to state 183
    ')'           shift, and go to state 296
    '['           shift, and go to state 184

    '*'           [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    ')'           [reduce using rule 113 (type_specifier)]
    '['           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration_specifiers      go to state 229
    storage_class_specifier     go to state 33
    type_specifier              go to state 34
    struct_or_union_specifier   go to state 35
    struct_or_union             go to state 36
    enum_specifier              go to state 37
    atomic_type_specifier       go to state 38
    type_qualifier              go to state 39
    function_specifier          go to state 40
    alignment_specifier         go to state 41
    pointer                     go to state 185
    parameter_type_list         go to state 297
    parameter_list              go to state 231
    parameter_declaration       go to state 232
    abstract_declarator         go to state 298
    direct_abstract_declarator  go to state 187


state 184

  204 direct_abstract_declarator: '[' . ']'
  205                           | '[' . '*' ']'
  206                           | '[' . STATIC type_qualifier_list assignment_expression ']'
  207                           | '[' . STATIC assignment_expression ']'
  208                           | '[' . type_qualifier_list STATIC assignment_expression ']'
  209                           | '[' . type_qualifier_list assignment_expression ']'
  210                           | '[' . type_qualifier_list ']'
  211                           | '[' . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 299
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 300
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 301
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 302
    type_qualifier             go to state 119
    type_qualifier_list        go to state 303


state 185

  200 abstract_declarator: pointer . direct_abstract_declarator
  201                    | pointer .

    '('  shift, and go to state 183
    '['  shift, and go to state 184

    $default  reduce using rule 201 (abstract_declarator)

    direct_abstract_declarator  go to state 304


state 186

  198 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 198 (type_name)


state 187

  202 abstract_declarator: direct_abstract_declarator .
  212 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  213                           | direct_abstract_declarator . '[' '*' ']'
  214                           | direct_abstract_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  215                           | direct_abstract_declarator . '[' STATIC assignment_expression ']'
  216                           | direct_abstract_declarator . '[' type_qualifier_list assignment_expression ']'
  217                           | direct_abstract_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  218                           | direct_abstract_declarator . '[' type_qualifier_list ']'
  219                           | direct_abstract_declarator . '[' assignment_expression ']'
  222                           | direct_abstract_declarator . '(' ')'
  223                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 305
    '['  shift, and go to state 306

    $default  reduce using rule 202 (abstract_declarator)


state 188

  142 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 142 (specifier_qualifier_list)


state 189

  165 alignment_specifier: ALIGNAS '(' type_name ')' .

    $default  reduce using rule 165 (alignment_specifier)


state 190

  158 atomic_type_specifier: ATOMIC '(' type_name ')' .

    $default  reduce using rule 158 (atomic_type_specifier)


state 191

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression ',' . STRING_LITERAL ')' ';'

    STRING_LITERAL  shift, and go to state 307


state 192

  188 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 188 (type_qualifier_list)


state 193

  183 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 183 (pointer)


state 194

  170 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 170 (direct_declarator)


state 195

  104 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 104 (init_declarator_list)


state 196

  105 init_declarator: declarator . '=' initializer
  106                | declarator .

    '='  shift, and go to state 125

    $default  reduce using rule 106 (init_declarator)


state 197

  224 initializer: '{' . initializer_list '}'
  225            | '{' . initializer_list ',' '}'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '['                   shift, and go to state 308
    '.'                   shift, and go to state 309
    '{'                   shift, and go to state 197
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 310
    initializer_list           go to state 311
    designation                go to state 312
    designator_list            go to state 313
    designator                 go to state 314


state 198

  226 initializer: assignment_expression .

    $default  reduce using rule 226 (initializer)


state 199

  105 init_declarator: declarator '=' initializer .

    $default  reduce using rule 105 (init_declarator)


state 200

    1 primary_expression: IDENTIFIER .
  243 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 315

    $default  reduce using rule 1 (primary_expression)


state 201

  244 labeled_statement: CASE . constant_expression ':' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 316


state 202

  245 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 317


state 203

  254 selection_statement: IF . '(' expression ')' statement ELSE statement
  255                    | IF . '(' expression ')' statement

    '('  shift, and go to state 318


state 204

  256 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 319


state 205

  257 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 320


state 206

  258 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 321
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 207

  259 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  260                    | FOR . '(' expression_statement expression_statement expression ')' statement
  261                    | FOR . '(' declaration expression_statement ')' statement
  262                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 322


state 208

  263 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 323


state 209

  264 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 324


state 210

  265 jump_statement: BREAK . ';'

    ';'  shift, and go to state 325


state 211

  266 jump_statement: RETURN . ';'
  267               | RETURN . expression ';'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 326

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 327


state 212

  246 compound_statement: '{' '}' .

    $default  reduce using rule 246 (compound_statement)


state 213

  252 expression_statement: ';' .

    $default  reduce using rule 252 (expression_statement)


state 214

   88 expression: expression . ',' assignment_expression
  253 expression_statement: expression . ';'

    ','  shift, and go to state 269
    ';'  shift, and go to state 328


state 215

  250 block_item: declaration .

    $default  reduce using rule 250 (block_item)


state 216

  251 block_item: statement .

    $default  reduce using rule 251 (block_item)


state 217

  237 statement: labeled_statement .

    $default  reduce using rule 237 (statement)


state 218

  238 statement: compound_statement .

    $default  reduce using rule 238 (statement)


state 219

  247 compound_statement: '{' block_item_list . '}'
  249 block_item_list: block_item_list . block_item

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    TYPEDEF               shift, and go to state 2
    EXTERN                shift, and go to state 3
    STATIC                shift, and go to state 4
    AUTO                  shift, and go to state 5
    REGISTER              shift, and go to state 6
    INLINE                shift, and go to state 7
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNAS               shift, and go to state 26
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    NORETURN              shift, and go to state 28
    STATIC_ASSERT         shift, and go to state 29
    THREAD_LOCAL          shift, and go to state 30
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '}'                   shift, and go to state 329
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    ';'           [reduce using rule 113 (type_specifier)]

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    declaration                go to state 215
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    statement                  go to state 216
    labeled_statement          go to state 217
    compound_statement         go to state 218
    block_item                 go to state 330
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 220

  248 block_item_list: block_item .

    $default  reduce using rule 248 (block_item_list)


state 221

  239 statement: expression_statement .

    $default  reduce using rule 239 (statement)


state 222

  240 statement: selection_statement .

    $default  reduce using rule 240 (statement)


state 223

  241 statement: iteration_statement .

    $default  reduce using rule 241 (statement)


state 224

  242 statement: jump_statement .

    $default  reduce using rule 242 (statement)


state 225

  275 declaration_list: declaration_list declaration .

    $default  reduce using rule 275 (declaration_list)


state 226

  272 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 272 (function_definition)


state 227

  196 identifier_list: IDENTIFIER .

    $default  reduce using rule 196 (identifier_list)


state 228

  181 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 181 (direct_declarator)


state 229

  193 parameter_declaration: declaration_specifiers . declarator
  194                      | declaration_specifiers . abstract_declarator
  195                      | declaration_specifiers .

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 331
    '['         shift, and go to state 184

    $default  reduce using rule 195 (parameter_declaration)

    declarator                  go to state 332
    direct_declarator           go to state 58
    pointer                     go to state 333
    abstract_declarator         go to state 334
    direct_abstract_declarator  go to state 187


state 230

  180 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 335


state 231

  189 parameter_type_list: parameter_list . ',' ELLIPSIS
  190                    | parameter_list .
  192 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 336

    $default  reduce using rule 190 (parameter_type_list)


state 232

  191 parameter_list: parameter_declaration .

    $default  reduce using rule 191 (parameter_list)


state 233

  182 direct_declarator: direct_declarator '(' identifier_list . ')'
  197 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 337
    ','  shift, and go to state 338


state 234

   37 unary_operator: '*' .
  172 direct_declarator: direct_declarator '[' '*' . ']'

    ']'  shift, and go to state 339

    $default  reduce using rule 37 (unary_operator)


state 235

  173 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  174                  | direct_declarator '[' STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 340
    type_qualifier             go to state 119
    type_qualifier_list        go to state 341


state 236

  171 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 171 (direct_declarator)


state 237

  179 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 342


state 238

  175 direct_declarator: direct_declarator '[' type_qualifier_list . '*' ']'
  176                  | direct_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  177                  | direct_declarator '[' type_qualifier_list . assignment_expression ']'
  178                  | direct_declarator '[' type_qualifier_list . ']'
  188 type_qualifier_list: type_qualifier_list . type_qualifier

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 343
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 344
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 345
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 346
    type_qualifier             go to state 192


state 239

  131 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list . '}'
  136 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPEDEF_NAME   shift, and go to state 1
    CONST          shift, and go to state 8
    RESTRICT       shift, and go to state 9
    VOLATILE       shift, and go to state 10
    BOOL           shift, and go to state 11
    CHAR           shift, and go to state 12
    SHORT          shift, and go to state 13
    INT            shift, and go to state 14
    LONG           shift, and go to state 15
    SIGNED         shift, and go to state 16
    UNSIGNED       shift, and go to state 17
    FLOAT          shift, and go to state 18
    DOUBLE         shift, and go to state 19
    VOID           shift, and go to state 20
    COMPLEX        shift, and go to state 21
    IMAGINARY      shift, and go to state 22
    STRUCT         shift, and go to state 23
    UNION          shift, and go to state 24
    ENUM           shift, and go to state 25
    ATOMIC         shift, and go to state 27
    STATIC_ASSERT  shift, and go to state 29
    '}'            shift, and go to state 347

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    struct_declaration         go to state 241
    specifier_qualifier_list   go to state 137
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    static_assert_declaration  go to state 138


state 240

  130 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 130 (struct_or_union_specifier)


state 241

  136 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 136 (struct_declaration_list)


state 242

  146 struct_declarator: ':' . constant_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 348


state 243

  137 struct_declaration: specifier_qualifier_list ';' .

    $default  reduce using rule 137 (struct_declaration)


state 244

  138 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  145 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 349
    ';'  shift, and go to state 350


state 245

  144 struct_declarator_list: struct_declarator .

    $default  reduce using rule 144 (struct_declarator_list)


state 246

  147 struct_declarator: declarator . ':' constant_expression
  148                  | declarator .

    ':'  shift, and go to state 351

    $default  reduce using rule 148 (struct_declarator)


state 247

  152 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' . '}'
  155 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 70
    '}'         shift, and go to state 352

    enumeration_constant  go to state 71
    enumerator            go to state 251


state 248

  151 enum_specifier: ENUM IDENTIFIER '{' enumerator_list '}' .

    $default  reduce using rule 151 (enum_specifier)


state 249

  156 enumerator: enumeration_constant '=' constant_expression .

    $default  reduce using rule 156 (enumerator)


state 250

  150 enum_specifier: ENUM '{' enumerator_list ',' '}' .

    $default  reduce using rule 150 (enum_specifier)


state 251

  155 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 155 (enumerator_list)


state 252

   25 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   26                   | '(' type_name . ')' '{' initializer_list ',' '}'
   34 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 353


state 253

   25 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   26                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 354


state 254

   35 unary_expression: ALIGNOF '(' type_name . ')'

    ')'  shift, and go to state 355


state 255

   12 generic_selection: GENERIC '(' assignment_expression . ',' generic_assoc_list ')'

    ','  shift, and go to state 356


state 256

   76 assignment_operator: '=' .

    $default  reduce using rule 76 (assignment_operator)


state 257

   77 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


state 258

   78 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 78 (assignment_operator)


state 259

   79 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 79 (assignment_operator)


state 260

   80 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 80 (assignment_operator)


state 261

   81 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 81 (assignment_operator)


state 262

   82 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 82 (assignment_operator)


state 263

   83 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 83 (assignment_operator)


state 264

   84 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 84 (assignment_operator)


state 265

   85 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 85 (assignment_operator)


state 266

   86 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 86 (assignment_operator)


state 267

   75 assignment_expression: unary_expression assignment_operator . assignment_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 357


state 268

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


state 269

   88 expression: expression ',' . assignment_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 358


state 270

   25 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   26                   | '(' type_name ')' . '{' initializer_list ',' '}'
   43 cast_expression: '(' type_name ')' . cast_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 359
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression  go to state 92
    constant            go to state 93
    string              go to state 94
    generic_selection   go to state 95
    postfix_expression  go to state 96
    unary_expression    go to state 97
    unary_operator      go to state 98
    cast_expression     go to state 360


state 271

   22 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 22 (postfix_expression)


state 272

   19 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 19 (postfix_expression)


state 273

   20 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   28 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 361
    ','  shift, and go to state 362


state 274

   27 argument_expression_list: assignment_expression .

    $default  reduce using rule 27 (argument_expression_list)


state 275

   18 postfix_expression: postfix_expression '[' expression . ']'
   88 expression: expression . ',' assignment_expression

    ','  shift, and go to state 269
    ']'  shift, and go to state 363


state 276

   21 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 21 (postfix_expression)


state 277

   45 multiplicative_expression: multiplicative_expression '*' cast_expression .

    $default  reduce using rule 45 (multiplicative_expression)


state 278

   46 multiplicative_expression: multiplicative_expression '/' cast_expression .

    $default  reduce using rule 46 (multiplicative_expression)


state 279

   47 multiplicative_expression: multiplicative_expression '%' cast_expression .

    $default  reduce using rule 47 (multiplicative_expression)


state 280

   45 multiplicative_expression: multiplicative_expression . '*' cast_expression
   46                          | multiplicative_expression . '/' cast_expression
   47                          | multiplicative_expression . '%' cast_expression
   49 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 49 (additive_expression)


state 281

   45 multiplicative_expression: multiplicative_expression . '*' cast_expression
   46                          | multiplicative_expression . '/' cast_expression
   47                          | multiplicative_expression . '%' cast_expression
   50 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 162
    '/'  shift, and go to state 163
    '%'  shift, and go to state 164

    $default  reduce using rule 50 (additive_expression)


state 282

   49 additive_expression: additive_expression . '+' multiplicative_expression
   50                    | additive_expression . '-' multiplicative_expression
   52 shift_expression: shift_expression LEFT_OP additive_expression .

    '+'  shift, and go to state 165
    '-'  shift, and go to state 166

    $default  reduce using rule 52 (shift_expression)


state 283

   49 additive_expression: additive_expression . '+' multiplicative_expression
   50                    | additive_expression . '-' multiplicative_expression
   53 shift_expression: shift_expression RIGHT_OP additive_expression .

    '+'  shift, and go to state 165
    '-'  shift, and go to state 166

    $default  reduce using rule 53 (shift_expression)


state 284

   52 shift_expression: shift_expression . LEFT_OP additive_expression
   53                 | shift_expression . RIGHT_OP additive_expression
   55 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 167
    RIGHT_OP  shift, and go to state 168

    $default  reduce using rule 55 (relational_expression)


state 285

   52 shift_expression: shift_expression . LEFT_OP additive_expression
   53                 | shift_expression . RIGHT_OP additive_expression
   56 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 167
    RIGHT_OP  shift, and go to state 168

    $default  reduce using rule 56 (relational_expression)


state 286

   52 shift_expression: shift_expression . LEFT_OP additive_expression
   53                 | shift_expression . RIGHT_OP additive_expression
   57 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 167
    RIGHT_OP  shift, and go to state 168

    $default  reduce using rule 57 (relational_expression)


state 287

   52 shift_expression: shift_expression . LEFT_OP additive_expression
   53                 | shift_expression . RIGHT_OP additive_expression
   58 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 167
    RIGHT_OP  shift, and go to state 168

    $default  reduce using rule 58 (relational_expression)


state 288

   55 relational_expression: relational_expression . '<' shift_expression
   56                      | relational_expression . '>' shift_expression
   57                      | relational_expression . LE_OP shift_expression
   58                      | relational_expression . GE_OP shift_expression
   60 equality_expression: equality_expression EQ_OP relational_expression .

    '<'    shift, and go to state 169
    '>'    shift, and go to state 170
    LE_OP  shift, and go to state 171
    GE_OP  shift, and go to state 172

    $default  reduce using rule 60 (equality_expression)


state 289

   55 relational_expression: relational_expression . '<' shift_expression
   56                      | relational_expression . '>' shift_expression
   57                      | relational_expression . LE_OP shift_expression
   58                      | relational_expression . GE_OP shift_expression
   61 equality_expression: equality_expression NE_OP relational_expression .

    '<'    shift, and go to state 169
    '>'    shift, and go to state 170
    LE_OP  shift, and go to state 171
    GE_OP  shift, and go to state 172

    $default  reduce using rule 61 (equality_expression)


state 290

   60 equality_expression: equality_expression . EQ_OP relational_expression
   61                    | equality_expression . NE_OP relational_expression
   63 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 173
    NE_OP  shift, and go to state 174

    $default  reduce using rule 63 (and_expression)


state 291

   63 and_expression: and_expression . '&' equality_expression
   65 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 175

    $default  reduce using rule 65 (exclusive_or_expression)


state 292

   65 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   67 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 176

    $default  reduce using rule 67 (inclusive_or_expression)


state 293

   67 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   69 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 177

    $default  reduce using rule 69 (logical_and_expression)


state 294

   69 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   71 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 178

    $default  reduce using rule 71 (logical_or_expression)


state 295

   73 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   88 expression: expression . ',' assignment_expression

    ','  shift, and go to state 269
    ':'  shift, and go to state 364


state 296

  220 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 220 (direct_abstract_declarator)


state 297

  221 direct_abstract_declarator: '(' parameter_type_list . ')'

    ')'  shift, and go to state 365


state 298

  203 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 366


state 299

   37 unary_operator: '*' .
  205 direct_abstract_declarator: '[' '*' . ']'

    ']'  shift, and go to state 367

    $default  reduce using rule 37 (unary_operator)


state 300

  206 direct_abstract_declarator: '[' STATIC . type_qualifier_list assignment_expression ']'
  207                           | '[' STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 368
    type_qualifier             go to state 119
    type_qualifier_list        go to state 369


state 301

  204 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 204 (direct_abstract_declarator)


state 302

  211 direct_abstract_declarator: '[' assignment_expression . ']'

    ']'  shift, and go to state 370


state 303

  188 type_qualifier_list: type_qualifier_list . type_qualifier
  208 direct_abstract_declarator: '[' type_qualifier_list . STATIC assignment_expression ']'
  209                           | '[' type_qualifier_list . assignment_expression ']'
  210                           | '[' type_qualifier_list . ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 371
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 372
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 373
    type_qualifier             go to state 192


state 304

  200 abstract_declarator: pointer direct_abstract_declarator .
  212 direct_abstract_declarator: direct_abstract_declarator . '[' ']'
  213                           | direct_abstract_declarator . '[' '*' ']'
  214                           | direct_abstract_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  215                           | direct_abstract_declarator . '[' STATIC assignment_expression ']'
  216                           | direct_abstract_declarator . '[' type_qualifier_list assignment_expression ']'
  217                           | direct_abstract_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  218                           | direct_abstract_declarator . '[' type_qualifier_list ']'
  219                           | direct_abstract_declarator . '[' assignment_expression ']'
  222                           | direct_abstract_declarator . '(' ')'
  223                           | direct_abstract_declarator . '(' parameter_type_list ')'

    '('  shift, and go to state 305
    '['  shift, and go to state 306

    $default  reduce using rule 200 (abstract_declarator)


state 305

  222 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
  223                           | direct_abstract_declarator '(' . parameter_type_list ')'

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30
    ')'           shift, and go to state 374

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    ')'           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration_specifiers     go to state 229
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    parameter_type_list        go to state 375
    parameter_list             go to state 231
    parameter_declaration      go to state 232


state 306

  212 direct_abstract_declarator: direct_abstract_declarator '[' . ']'
  213                           | direct_abstract_declarator '[' . '*' ']'
  214                           | direct_abstract_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  215                           | direct_abstract_declarator '[' . STATIC assignment_expression ']'
  216                           | direct_abstract_declarator '[' . type_qualifier_list assignment_expression ']'
  217                           | direct_abstract_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  218                           | direct_abstract_declarator '[' . type_qualifier_list ']'
  219                           | direct_abstract_declarator '[' . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 376
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 377
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 378
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 379
    type_qualifier             go to state 119
    type_qualifier_list        go to state 380


state 307

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL . ')' ';'

    ')'  shift, and go to state 381


state 308

  234 designator: '[' . constant_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 382


state 309

  235 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 383


state 310

  228 initializer_list: initializer .

    $default  reduce using rule 228 (initializer_list)


state 311

  224 initializer: '{' initializer_list . '}'
  225            | '{' initializer_list . ',' '}'
  229 initializer_list: initializer_list . ',' designation initializer
  230                 | initializer_list . ',' initializer

    ','  shift, and go to state 384
    '}'  shift, and go to state 385


state 312

  227 initializer_list: designation . initializer

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 197
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 386


state 313

  231 designation: designator_list . '='
  233 designator_list: designator_list . designator

    '='  shift, and go to state 387
    '['  shift, and go to state 308
    '.'  shift, and go to state 309

    designator  go to state 388


state 314

  232 designator_list: designator .

    $default  reduce using rule 232 (designator_list)


state 315

  243 labeled_statement: IDENTIFIER ':' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 389
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 316

  244 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 390


state 317

  245 labeled_statement: DEFAULT ':' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 391
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 318

  254 selection_statement: IF '(' . expression ')' statement ELSE statement
  255                    | IF '(' . expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 392


state 319

  256 selection_statement: SWITCH '(' . expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 393


state 320

  257 iteration_statement: WHILE '(' . expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 394


state 321

  258 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 395


state 322

  259 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  260                    | FOR '(' . expression_statement expression_statement expression ')' statement
  261                    | FOR '(' . declaration expression_statement ')' statement
  262                    | FOR '(' . declaration expression_statement expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    TYPEDEF_NAME          shift, and go to state 1
    ENUMERATION_CONSTANT  shift, and go to state 86
    TYPEDEF               shift, and go to state 2
    EXTERN                shift, and go to state 3
    STATIC                shift, and go to state 4
    AUTO                  shift, and go to state 5
    REGISTER              shift, and go to state 6
    INLINE                shift, and go to state 7
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    BOOL                  shift, and go to state 11
    CHAR                  shift, and go to state 12
    SHORT                 shift, and go to state 13
    INT                   shift, and go to state 14
    LONG                  shift, and go to state 15
    SIGNED                shift, and go to state 16
    UNSIGNED              shift, and go to state 17
    FLOAT                 shift, and go to state 18
    DOUBLE                shift, and go to state 19
    VOID                  shift, and go to state 20
    COMPLEX               shift, and go to state 21
    IMAGINARY             shift, and go to state 22
    STRUCT                shift, and go to state 23
    UNION                 shift, and go to state 24
    ENUM                  shift, and go to state 25
    ALIGNAS               shift, and go to state 26
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 27
    GENERIC               shift, and go to state 88
    NORETURN              shift, and go to state 28
    STATIC_ASSERT         shift, and go to state 29
    THREAD_LOCAL          shift, and go to state 30
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    ';'           [reduce using rule 113 (type_specifier)]

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    declaration                go to state 396
    declaration_specifiers     go to state 128
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    static_assert_declaration  go to state 42
    expression_statement       go to state 397


state 323

  263 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 398


state 324

  264 jump_statement: CONTINUE ';' .

    $default  reduce using rule 264 (jump_statement)


state 325

  265 jump_statement: BREAK ';' .

    $default  reduce using rule 265 (jump_statement)


state 326

  266 jump_statement: RETURN ';' .

    $default  reduce using rule 266 (jump_statement)


state 327

   88 expression: expression . ',' assignment_expression
  267 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 269
    ';'  shift, and go to state 399


state 328

  253 expression_statement: expression ';' .

    $default  reduce using rule 253 (expression_statement)


state 329

  247 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 247 (compound_statement)


state 330

  249 block_item_list: block_item_list block_item .

    $default  reduce using rule 249 (block_item_list)


state 331

  170 direct_declarator: '(' . declarator ')'
  203 direct_abstract_declarator: '(' . abstract_declarator ')'
  220                           | '(' . ')'
  221                           | '(' . parameter_type_list ')'

    '*'           shift, and go to state 51
    IDENTIFIER    shift, and go to state 52
    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30
    '('           shift, and go to state 331
    ')'           shift, and go to state 296
    '['           shift, and go to state 184

    '*'           [reduce using rule 113 (type_specifier)]
    IDENTIFIER    [reduce using rule 113 (type_specifier)]
    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    '('           [reduce using rule 113 (type_specifier)]
    ')'           [reduce using rule 113 (type_specifier)]
    '['           [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration_specifiers      go to state 229
    storage_class_specifier     go to state 33
    type_specifier              go to state 34
    struct_or_union_specifier   go to state 35
    struct_or_union             go to state 36
    enum_specifier              go to state 37
    atomic_type_specifier       go to state 38
    type_qualifier              go to state 39
    function_specifier          go to state 40
    alignment_specifier         go to state 41
    declarator                  go to state 122
    direct_declarator           go to state 58
    pointer                     go to state 333
    parameter_type_list         go to state 297
    parameter_list              go to state 231
    parameter_declaration       go to state 232
    abstract_declarator         go to state 298
    direct_abstract_declarator  go to state 187


state 332

  193 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 193 (parameter_declaration)


state 333

  167 declarator: pointer . direct_declarator
  200 abstract_declarator: pointer . direct_abstract_declarator
  201                    | pointer .

    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 331
    '['         shift, and go to state 184

    $default  reduce using rule 201 (abstract_declarator)

    direct_declarator           go to state 133
    direct_abstract_declarator  go to state 304


state 334

  194 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 194 (parameter_declaration)


state 335

  180 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 180 (direct_declarator)


state 336

  189 parameter_type_list: parameter_list ',' . ELLIPSIS
  192 parameter_list: parameter_list ',' . parameter_declaration

    TYPEDEF_NAME  shift, and go to state 1
    TYPEDEF       shift, and go to state 2
    EXTERN        shift, and go to state 3
    STATIC        shift, and go to state 4
    AUTO          shift, and go to state 5
    REGISTER      shift, and go to state 6
    INLINE        shift, and go to state 7
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    ELLIPSIS      shift, and go to state 400
    ALIGNAS       shift, and go to state 26
    ATOMIC        shift, and go to state 27
    NORETURN      shift, and go to state 28
    THREAD_LOCAL  shift, and go to state 30

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    TYPEDEF       [reduce using rule 113 (type_specifier)]
    EXTERN        [reduce using rule 113 (type_specifier)]
    STATIC        [reduce using rule 113 (type_specifier)]
    AUTO          [reduce using rule 113 (type_specifier)]
    REGISTER      [reduce using rule 113 (type_specifier)]
    INLINE        [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ALIGNAS       [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    NORETURN      [reduce using rule 113 (type_specifier)]
    THREAD_LOCAL  [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    declaration_specifiers     go to state 229
    storage_class_specifier    go to state 33
    type_specifier             go to state 34
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 39
    function_specifier         go to state 40
    alignment_specifier        go to state 41
    parameter_declaration      go to state 401


state 337

  182 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 182 (direct_declarator)


state 338

  197 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 402


state 339

  172 direct_declarator: direct_declarator '[' '*' ']' .

    $default  reduce using rule 172 (direct_declarator)


state 340

  174 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 403


state 341

  173 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  188 type_qualifier_list: type_qualifier_list . type_qualifier

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 404
    type_qualifier             go to state 192


state 342

  179 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 179 (direct_declarator)


state 343

   37 unary_operator: '*' .
  175 direct_declarator: direct_declarator '[' type_qualifier_list '*' . ']'

    ']'  shift, and go to state 405

    $default  reduce using rule 37 (unary_operator)


state 344

  176 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 406


state 345

  178 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 178 (direct_declarator)


state 346

  177 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 407


state 347

  131 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 131 (struct_or_union_specifier)


state 348

  146 struct_declarator: ':' constant_expression .

    $default  reduce using rule 146 (struct_declarator)


state 349

  145 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    '*'         shift, and go to state 51
    IDENTIFIER  shift, and go to state 52
    '('         shift, and go to state 53
    ':'         shift, and go to state 242

    struct_declarator  go to state 408
    declarator         go to state 246
    direct_declarator  go to state 58
    pointer            go to state 59


state 350

  138 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 138 (struct_declaration)


state 351

  147 struct_declarator: declarator ':' . constant_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 110
    constant_expression        go to state 409


state 352

  152 enum_specifier: ENUM IDENTIFIER '{' enumerator_list ',' '}' .

    $default  reduce using rule 152 (enum_specifier)


state 353

   25 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   26                   | '(' type_name ')' . '{' initializer_list ',' '}'
   34 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 359

    $default  reduce using rule 34 (unary_expression)


state 354

   25 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   26                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 359


state 355

   35 unary_expression: ALIGNOF '(' type_name ')' .

    $default  reduce using rule 35 (unary_expression)


state 356

   12 generic_selection: GENERIC '(' assignment_expression ',' . generic_assoc_list ')'

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    DEFAULT       shift, and go to state 410
    ATOMIC        shift, and go to state 27

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    generic_assoc_list         go to state 411
    generic_association        go to state 412
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 413


state 357

   75 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 75 (assignment_expression)


state 358

   88 expression: expression ',' assignment_expression .

    $default  reduce using rule 88 (expression)


state 359

   25 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   26                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '['                   shift, and go to state 308
    '.'                   shift, and go to state 309
    '{'                   shift, and go to state 197
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 310
    initializer_list           go to state 414
    designation                go to state 312
    designator_list            go to state 313
    designator                 go to state 314


state 360

   43 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 43 (cast_expression)


state 361

   20 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 20 (postfix_expression)


state 362

   28 argument_expression_list: argument_expression_list ',' . assignment_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 415


state 363

   18 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 18 (postfix_expression)


state 364

   73 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 416


state 365

  221 direct_abstract_declarator: '(' parameter_type_list ')' .

    $default  reduce using rule 221 (direct_abstract_declarator)


state 366

  203 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 203 (direct_abstract_declarator)


state 367

  205 direct_abstract_declarator: '[' '*' ']' .

    $default  reduce using rule 205 (direct_abstract_declarator)


state 368

  207 direct_abstract_declarator: '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 417


state 369

  188 type_qualifier_list: type_qualifier_list . type_qualifier
  206 direct_abstract_declarator: '[' STATIC type_qualifier_list . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 418
    type_qualifier             go to state 192


state 370

  211 direct_abstract_declarator: '[' assignment_expression ']' .

    $default  reduce using rule 211 (direct_abstract_declarator)


state 371

  208 direct_abstract_declarator: '[' type_qualifier_list STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 419


state 372

  210 direct_abstract_declarator: '[' type_qualifier_list ']' .

    $default  reduce using rule 210 (direct_abstract_declarator)


state 373

  209 direct_abstract_declarator: '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 420


state 374

  222 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 222 (direct_abstract_declarator)


state 375

  223 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 421


state 376

   37 unary_operator: '*' .
  213 direct_abstract_declarator: direct_abstract_declarator '[' '*' . ']'

    ']'  shift, and go to state 422

    $default  reduce using rule 37 (unary_operator)


state 377

  214 direct_abstract_declarator: direct_abstract_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  215                           | direct_abstract_declarator '[' STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 423
    type_qualifier             go to state 119
    type_qualifier_list        go to state 424


state 378

  212 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 212 (direct_abstract_declarator)


state 379

  219 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 425


state 380

  188 type_qualifier_list: type_qualifier_list . type_qualifier
  216 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list . assignment_expression ']'
  217                           | direct_abstract_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  218                           | direct_abstract_declarator '[' type_qualifier_list . ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    STATIC                shift, and go to state 426
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ']'                   shift, and go to state 427
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 428
    type_qualifier             go to state 192


state 381

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' . ';'

    ';'  shift, and go to state 429


state 382

  234 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 430


state 383

  235 designator: '.' IDENTIFIER .

    $default  reduce using rule 235 (designator)


state 384

  225 initializer: '{' initializer_list ',' . '}'
  229 initializer_list: initializer_list ',' . designation initializer
  230                 | initializer_list ',' . initializer

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '['                   shift, and go to state 308
    '.'                   shift, and go to state 309
    '{'                   shift, and go to state 197
    '}'                   shift, and go to state 431
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 432
    designation                go to state 433
    designator_list            go to state 313
    designator                 go to state 314


state 385

  224 initializer: '{' initializer_list '}' .

    $default  reduce using rule 224 (initializer)


state 386

  227 initializer_list: designation initializer .

    $default  reduce using rule 227 (initializer_list)


state 387

  231 designation: designator_list '=' .

    $default  reduce using rule 231 (designation)


state 388

  233 designator_list: designator_list designator .

    $default  reduce using rule 233 (designator_list)


state 389

  243 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 243 (labeled_statement)


state 390

  244 labeled_statement: CASE constant_expression ':' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 434
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 391

  245 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 245 (labeled_statement)


state 392

   88 expression: expression . ',' assignment_expression
  254 selection_statement: IF '(' expression . ')' statement ELSE statement
  255                    | IF '(' expression . ')' statement

    ')'  shift, and go to state 435
    ','  shift, and go to state 269


state 393

   88 expression: expression . ',' assignment_expression
  256 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 436
    ','  shift, and go to state 269


state 394

   88 expression: expression . ',' assignment_expression
  257 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 437
    ','  shift, and go to state 269


state 395

  258 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 438


state 396

  261 iteration_statement: FOR '(' declaration . expression_statement ')' statement
  262                    | FOR '(' declaration . expression_statement expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    expression_statement       go to state 439


state 397

  259 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
  260                    | FOR '(' expression_statement . expression_statement expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    expression_statement       go to state 440


state 398

  263 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 263 (jump_statement)


state 399

  267 jump_statement: RETURN expression ';' .

    $default  reduce using rule 267 (jump_statement)


state 400

  189 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 189 (parameter_type_list)


state 401

  192 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 192 (parameter_list)


state 402

  197 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 197 (identifier_list)


state 403

  174 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 174 (direct_declarator)


state 404

  173 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 441


state 405

  175 direct_declarator: direct_declarator '[' type_qualifier_list '*' ']' .

    $default  reduce using rule 175 (direct_declarator)


state 406

  176 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 442


state 407

  177 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 177 (direct_declarator)


state 408

  145 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 145 (struct_declarator_list)


state 409

  147 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 147 (struct_declarator)


state 410

   16 generic_association: DEFAULT . ':' assignment_expression

    ':'  shift, and go to state 443


state 411

   12 generic_selection: GENERIC '(' assignment_expression ',' generic_assoc_list . ')'
   14 generic_assoc_list: generic_assoc_list . ',' generic_association

    ')'  shift, and go to state 444
    ','  shift, and go to state 445


state 412

   13 generic_assoc_list: generic_association .

    $default  reduce using rule 13 (generic_assoc_list)


state 413

   15 generic_association: type_name . ':' assignment_expression

    ':'  shift, and go to state 446


state 414

   25 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   26                   | '(' type_name ')' '{' initializer_list . ',' '}'
  229 initializer_list: initializer_list . ',' designation initializer
  230                 | initializer_list . ',' initializer

    ','  shift, and go to state 447
    '}'  shift, and go to state 448


state 415

   28 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 28 (argument_expression_list)


state 416

   73 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 73 (conditional_expression)


state 417

  207 direct_abstract_declarator: '[' STATIC assignment_expression ']' .

    $default  reduce using rule 207 (direct_abstract_declarator)


state 418

  206 direct_abstract_declarator: '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 449


state 419

  208 direct_abstract_declarator: '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 450


state 420

  209 direct_abstract_declarator: '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 209 (direct_abstract_declarator)


state 421

  223 direct_abstract_declarator: direct_abstract_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 223 (direct_abstract_declarator)


state 422

  213 direct_abstract_declarator: direct_abstract_declarator '[' '*' ']' .

    $default  reduce using rule 213 (direct_abstract_declarator)


state 423

  215 direct_abstract_declarator: direct_abstract_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 451


state 424

  188 type_qualifier_list: type_qualifier_list . type_qualifier
  214 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CONST                 shift, and go to state 8
    RESTRICT              shift, and go to state 9
    VOLATILE              shift, and go to state 10
    ALIGNOF               shift, and go to state 87
    ATOMIC                shift, and go to state 118
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 452
    type_qualifier             go to state 192


state 425

  219 direct_abstract_declarator: direct_abstract_declarator '[' assignment_expression ']' .

    $default  reduce using rule 219 (direct_abstract_declarator)


state 426

  217 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 453


state 427

  218 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 218 (direct_abstract_declarator)


state 428

  216 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 454


state 429

  236 static_assert_declaration: STATIC_ASSERT '(' constant_expression ',' STRING_LITERAL ')' ';' .

    $default  reduce using rule 236 (static_assert_declaration)


state 430

  234 designator: '[' constant_expression ']' .

    $default  reduce using rule 234 (designator)


state 431

  225 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 225 (initializer)


state 432

  230 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 230 (initializer_list)


state 433

  229 initializer_list: initializer_list ',' designation . initializer

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 197
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 455


state 434

  244 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 244 (labeled_statement)


state 435

  254 selection_statement: IF '(' expression ')' . statement ELSE statement
  255                    | IF '(' expression ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 456
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 436

  256 selection_statement: SWITCH '(' expression ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 457
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 437

  257 iteration_statement: WHILE '(' expression ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 458
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 438

  258 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 459


state 439

  261 iteration_statement: FOR '(' declaration expression_statement . ')' statement
  262                    | FOR '(' declaration expression_statement . expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ')'                   shift, and go to state 460
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 461


state 440

  259 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
  260                    | FOR '(' expression_statement expression_statement . expression ')' statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    ')'                   shift, and go to state 462
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 463


state 441

  173 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 173 (direct_declarator)


state 442

  176 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 176 (direct_declarator)


state 443

   16 generic_association: DEFAULT ':' . assignment_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 464


state 444

   12 generic_selection: GENERIC '(' assignment_expression ',' generic_assoc_list ')' .

    $default  reduce using rule 12 (generic_selection)


state 445

   14 generic_assoc_list: generic_assoc_list ',' . generic_association

    TYPEDEF_NAME  shift, and go to state 1
    CONST         shift, and go to state 8
    RESTRICT      shift, and go to state 9
    VOLATILE      shift, and go to state 10
    BOOL          shift, and go to state 11
    CHAR          shift, and go to state 12
    SHORT         shift, and go to state 13
    INT           shift, and go to state 14
    LONG          shift, and go to state 15
    SIGNED        shift, and go to state 16
    UNSIGNED      shift, and go to state 17
    FLOAT         shift, and go to state 18
    DOUBLE        shift, and go to state 19
    VOID          shift, and go to state 20
    COMPLEX       shift, and go to state 21
    IMAGINARY     shift, and go to state 22
    STRUCT        shift, and go to state 23
    UNION         shift, and go to state 24
    ENUM          shift, and go to state 25
    DEFAULT       shift, and go to state 410
    ATOMIC        shift, and go to state 27

    TYPEDEF_NAME  [reduce using rule 113 (type_specifier)]
    CONST         [reduce using rule 113 (type_specifier)]
    RESTRICT      [reduce using rule 113 (type_specifier)]
    VOLATILE      [reduce using rule 113 (type_specifier)]
    BOOL          [reduce using rule 113 (type_specifier)]
    CHAR          [reduce using rule 113 (type_specifier)]
    SHORT         [reduce using rule 113 (type_specifier)]
    INT           [reduce using rule 113 (type_specifier)]
    LONG          [reduce using rule 113 (type_specifier)]
    SIGNED        [reduce using rule 113 (type_specifier)]
    UNSIGNED      [reduce using rule 113 (type_specifier)]
    FLOAT         [reduce using rule 113 (type_specifier)]
    DOUBLE        [reduce using rule 113 (type_specifier)]
    VOID          [reduce using rule 113 (type_specifier)]
    COMPLEX       [reduce using rule 113 (type_specifier)]
    IMAGINARY     [reduce using rule 113 (type_specifier)]
    STRUCT        [reduce using rule 113 (type_specifier)]
    UNION         [reduce using rule 113 (type_specifier)]
    ENUM          [reduce using rule 113 (type_specifier)]
    ATOMIC        [reduce using rule 113 (type_specifier)]
    $default      reduce using rule 113 (type_specifier)

    generic_association        go to state 465
    type_specifier             go to state 112
    struct_or_union_specifier  go to state 35
    struct_or_union            go to state 36
    specifier_qualifier_list   go to state 113
    enum_specifier             go to state 37
    atomic_type_specifier      go to state 38
    type_qualifier             go to state 114
    type_name                  go to state 413


state 446

   15 generic_association: type_name ':' . assignment_expression

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 466


state 447

   26 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  229 initializer_list: initializer_list ',' . designation initializer
  230                 | initializer_list ',' . initializer

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 78
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '['                   shift, and go to state 308
    '.'                   shift, and go to state 309
    '{'                   shift, and go to state 197
    '}'                   shift, and go to state 467
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 198
    initializer                go to state 432
    designation                go to state 433
    designator_list            go to state 313
    designator                 go to state 314


state 448

   25 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 25 (postfix_expression)


state 449

  206 direct_abstract_declarator: '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 206 (direct_abstract_declarator)


state 450

  208 direct_abstract_declarator: '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 208 (direct_abstract_declarator)


state 451

  215 direct_abstract_declarator: direct_abstract_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 215 (direct_abstract_declarator)


state 452

  214 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 468


state 453

  217 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 469


state 454

  216 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 216 (direct_abstract_declarator)


state 455

  229 initializer_list: initializer_list ',' designation initializer .

    $default  reduce using rule 229 (initializer_list)


state 456

  254 selection_statement: IF '(' expression ')' statement . ELSE statement
  255                    | IF '(' expression ')' statement .

    ELSE  shift, and go to state 470

    ELSE      [reduce using rule 255 (selection_statement)]
    $default  reduce using rule 255 (selection_statement)


state 457

  256 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 256 (selection_statement)


state 458

  257 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 257 (iteration_statement)


state 459

   88 expression: expression . ',' assignment_expression
  258 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 471
    ','  shift, and go to state 269


state 460

  261 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 472
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 461

   88 expression: expression . ',' assignment_expression
  262 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement

    ')'  shift, and go to state 473
    ','  shift, and go to state 269


state 462

  259 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 474
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 463

   88 expression: expression . ',' assignment_expression
  260 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 475
    ','  shift, and go to state 269


state 464

   16 generic_association: DEFAULT ':' assignment_expression .

    $default  reduce using rule 16 (generic_association)


state 465

   14 generic_assoc_list: generic_assoc_list ',' generic_association .

    $default  reduce using rule 14 (generic_assoc_list)


state 466

   15 generic_association: type_name ':' assignment_expression .

    $default  reduce using rule 15 (generic_association)


state 467

   26 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 26 (postfix_expression)


state 468

  214 direct_abstract_declarator: direct_abstract_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 214 (direct_abstract_declarator)


state 469

  217 direct_abstract_declarator: direct_abstract_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 217 (direct_abstract_declarator)


state 470

  254 selection_statement: IF '(' expression ')' statement ELSE . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 476
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 471

  258 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 477


state 472

  261 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  reduce using rule 261 (iteration_statement)


state 473

  262 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 478
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 474

  259 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 259 (iteration_statement)


state 475

  260 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    '+'                   shift, and go to state 74
    '-'                   shift, and go to state 75
    '*'                   shift, and go to state 76
    '!'                   shift, and go to state 77
    IDENTIFIER            shift, and go to state 200
    I_CONSTANT            shift, and go to state 79
    F_CONSTANT            shift, and go to state 80
    STRING_LITERAL        shift, and go to state 81
    FUNC_NAME             shift, and go to state 82
    SIZEOF                shift, and go to state 83
    INC_OP                shift, and go to state 84
    DEC_OP                shift, and go to state 85
    ENUMERATION_CONSTANT  shift, and go to state 86
    CASE                  shift, and go to state 201
    DEFAULT               shift, and go to state 202
    IF                    shift, and go to state 203
    SWITCH                shift, and go to state 204
    WHILE                 shift, and go to state 205
    DO                    shift, and go to state 206
    FOR                   shift, and go to state 207
    GOTO                  shift, and go to state 208
    CONTINUE              shift, and go to state 209
    BREAK                 shift, and go to state 210
    RETURN                shift, and go to state 211
    ALIGNOF               shift, and go to state 87
    GENERIC               shift, and go to state 88
    '('                   shift, and go to state 89
    '{'                   shift, and go to state 126
    '&'                   shift, and go to state 90
    '~'                   shift, and go to state 91
    ';'                   shift, and go to state 213

    primary_expression         go to state 92
    constant                   go to state 93
    string                     go to state 94
    generic_selection          go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 150
    unary_operator             go to state 98
    cast_expression            go to state 99
    multiplicative_expression  go to state 100
    additive_expression        go to state 101
    shift_expression           go to state 102
    relational_expression      go to state 103
    equality_expression        go to state 104
    and_expression             go to state 105
    exclusive_or_expression    go to state 106
    inclusive_or_expression    go to state 107
    logical_and_expression     go to state 108
    logical_or_expression      go to state 109
    conditional_expression     go to state 151
    assignment_expression      go to state 152
    expression                 go to state 214
    statement                  go to state 479
    labeled_statement          go to state 217
    compound_statement         go to state 218
    expression_statement       go to state 221
    selection_statement        go to state 222
    iteration_statement        go to state 223
    jump_statement             go to state 224


state 476

  254 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 254 (selection_statement)


state 477

  258 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 258 (iteration_statement)


state 478

  262 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 262 (iteration_statement)


state 479

  260 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 260 (iteration_statement)
